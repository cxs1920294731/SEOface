<?xml version="1.0"?>
<doc>
<assembly>
<name>
Analysis
</name>
</assembly>
<members>
<member name="T:Analysis.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Analysis.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Analysis.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:Analysis.AhappyDeal.InsertCategories(System.Int32)">
 <summary>
 往数据库中categories插入数据
 </summary>
 <param name="siteID">siteid </param>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.GetCategoryId(System.Int32,System.String)">
 <summary>
 获取指定站点的指定CategoryName的CategoryId
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.GetListAdids(System.String,System.Int32,System.Int32,System.DateTime,System.String)">
 <summary>
 获取指定URL页面的Banner条信息
 </summary>
 <param name="pageUrl"></param>
 <param name="siteid"></param>
 <param name="nowTime"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.InsertAd(Analysis.Ad,System.Collections.Generic.List{Analysis.Ad},System.Int32)">
 <summary>
 将获得的Ad信息保存至Ads表中。
 </summary>
 <param name="ad"></param>
 <param name="listAd"></param>
 <param name="categoryID"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.JudgeAd(System.String,System.Collections.Generic.List{Analysis.Ad})">
 <summary>
 判断即将插入的Ad的URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.GetProductList(System.Int32)">
 <summary>
 获取指定站点的products表中的所有产品
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.JudgeProduct(System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.AhappyDeal.AddIssueSubject(System.Int32,System.Int32,System.String,System.String)">
 <summary>
 获得邮件的subject
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.IAnalysis.AutoInterface.IStart(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.DateTime)">
 <summary>
 Start()方法接口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="splitContactCount"></param>
 <param name="spreadLogin"></param>
 <param name="appId"></param>
 <param name="url"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="T:Analysis.Common">
 <summary>
 调用AliexpressApi过程中需要使用到的公共方法
 author：DoraAo
 create time：20140703
 可以剥离出来的公共方法请放置入此类中；
 </summary>
 <remarks></remarks>
</member>
<member name="M:Analysis.Common.LodeWeb(System.String,System.Int32,System.String)">
 <summary>
 用post方法实现web request。可设定postdata
 </summary>
 <param name="URL"></param>
 <param name="timeOut"></param>
 <param name="PostData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Common.Signature(System.String)">
 <summary>
 根据提供的url生成API签名或参数签名，如url中包含“param2”，则生成的是API签名，否则是参数签名
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Common.addDominForUrl(System.String,System.String)">
 <summary>
 补全链接 ，产品herf属性的域名部分
 </summary>
 <param name="domin">应去除末尾/,以防重复</param>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Common.addParamForUrl(System.String,System.String)">
 <summary>
 为请求的url添加query参数
 </summary>
 <param name="url"></param>
 <param name="param"></param>
 <returns></returns>
</member>
<member name="M:Analysis.CookieHelper.SetCookies(System.String,System.String)">
 <summary>
 create a cookie and set value
 </summary>
 <param name="cookieName"></param>
 <param name="cookieVal"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.CookieHelper.GetCookies(System.String)">
 <summary>
 获取某个特定Cookie的值
 </summary>
 <param name="cookieName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.CookieHelper.ClearCookies(System.String)">
 <summary>
 清除某个cookie
 </summary>
 <param name="cookieName"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Couppie.SetSubject(System.Int32,System.Int32,System.String,System.String,System.String)">
 <summary>
 从数据库Promotion产品中获得并设置Subject信息如个性化，刊号，日期等
 </summary>
 <param name="issueId"></param>
 <remarks>可以新增自定义标签，并在此处实现</remarks>
</member>
<member name="M:Analysis.CategoryDAL.GetCategory(System.Int32,System.String)">
 <summary>
 根据某个分类的名字获取某个账户下面的分类对象
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Analysis.EmailAlerterEntities">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.#ctor">
 <summary>
 Initializes a new EmailAlerterEntities object using the connection string found in the 'EmailAlerterEntities' section of the application configuration file.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.#ctor(System.String)">
 <summary>
 Initialize a new EmailAlerterEntities object.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.#ctor(System.Data.EntityClient.EntityConnection)">
 <summary>
 Initialize a new EmailAlerterEntities object.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Ads">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Ads_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.AutomationSites">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Clicks_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.ContactLists_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Convertions_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Issues">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Opens_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.PlanTypes">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Products">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Products_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.RssContactLists">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.RssSubscriptions">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Sections">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.SentLogs">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.SplitContactLists">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Templates">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.TemplateInfoes">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.TemplateLibraries">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.Tokens">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.BannerRegexes">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.ProductPaths">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.AutomationPlans">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.EmailAlerterEntities.ContactSettings">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToAds(Analysis.Ad)">
 <summary>
 Deprecated Method for adding a new object to the Ads EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToAds_Issue(Analysis.Ads_Issue)">
 <summary>
 Deprecated Method for adding a new object to the Ads_Issue EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToAutomationSites(Analysis.AutomationSite)">
 <summary>
 Deprecated Method for adding a new object to the AutomationSites EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToCategories(Analysis.Category)">
 <summary>
 Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToClicks_Issue(Analysis.Clicks_Issue)">
 <summary>
 Deprecated Method for adding a new object to the Clicks_Issue EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToContactLists_Issue(Analysis.ContactLists_Issue)">
 <summary>
 Deprecated Method for adding a new object to the ContactLists_Issue EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToConvertions_Issue(Analysis.Convertions_Issue)">
 <summary>
 Deprecated Method for adding a new object to the Convertions_Issue EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToIssues(Analysis.Issue)">
 <summary>
 Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToOpens_Issue(Analysis.Opens_Issue)">
 <summary>
 Deprecated Method for adding a new object to the Opens_Issue EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToPlanTypes(Analysis.PlanType)">
 <summary>
 Deprecated Method for adding a new object to the PlanTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToProducts(Analysis.Product)">
 <summary>
 Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToProducts_Issue(Analysis.Products_Issue)">
 <summary>
 Deprecated Method for adding a new object to the Products_Issue EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToRssContactLists(Analysis.RssContactList)">
 <summary>
 Deprecated Method for adding a new object to the RssContactLists EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToRssSubscriptions(Analysis.RssSubscription)">
 <summary>
 Deprecated Method for adding a new object to the RssSubscriptions EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToSections(Analysis.Section)">
 <summary>
 Deprecated Method for adding a new object to the Sections EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToSentLogs(Analysis.SentLog)">
 <summary>
 Deprecated Method for adding a new object to the SentLogs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToSplitContactLists(Analysis.SplitContactList)">
 <summary>
 Deprecated Method for adding a new object to the SplitContactLists EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToTemplates(Analysis.Template)">
 <summary>
 Deprecated Method for adding a new object to the Templates EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToTemplateInfoes(Analysis.TemplateInfo)">
 <summary>
 Deprecated Method for adding a new object to the TemplateInfoes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToTemplateLibraries(Analysis.TemplateLibrary)">
 <summary>
 Deprecated Method for adding a new object to the TemplateLibraries EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToTokens(Analysis.Token)">
 <summary>
 Deprecated Method for adding a new object to the Tokens EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToBannerRegexes(Analysis.BannerRegex)">
 <summary>
 Deprecated Method for adding a new object to the BannerRegexes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToProductPaths(Analysis.ProductPath)">
 <summary>
 Deprecated Method for adding a new object to the ProductPaths EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToAutomationPlans(Analysis.AutomationPlan)">
 <summary>
 Deprecated Method for adding a new object to the AutomationPlans EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.AddToContactSettings(Analysis.ContactSetting)">
 <summary>
 Deprecated Method for adding a new object to the ContactSettings EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
 </summary>
</member>
<member name="M:Analysis.EmailAlerterEntities.GetAutoPlanInfos(System.String,System.String,System.String)">
 <summary>
 No Metadata Documentation available.
 </summary>
 <param name="spreadAccount">No Metadata Documentation available.</param>
 <param name="keyWord">No Metadata Documentation available.</param>
 <param name="status">No Metadata Documentation available.</param>
</member>
<member name="M:Analysis.EmailAlerterEntities.GetOneAutoPlanInfo(System.Nullable{System.Int32},System.String)">
 <summary>
 No Metadata Documentation available.
 </summary>
 <param name="siteid">No Metadata Documentation available.</param>
 <param name="planType">No Metadata Documentation available.</param>
</member>
<member name="M:Analysis.EmailAlerterEntities.GetProdpathbyCates(System.String,System.Nullable{System.Int32},System.String)">
 <summary>
 No Metadata Documentation available.
 </summary>
 <param name="cates">No Metadata Documentation available.</param>
 <param name="siteid">No Metadata Documentation available.</param>
 <param name="plantype">No Metadata Documentation available.</param>
</member>
<member name="T:Analysis.Ad">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Ad.CreateAd(System.Int64)">
 <summary>
 Create a new Ad object.
 </summary>
 <param name="adID">Initial value of the AdID property.</param>
</member>
<member name="P:Analysis.Ad.AdID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Ad1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Url">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.PictureUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.SizeHeight">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.SizeWidth">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Type">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Lastupdate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Price">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Discount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Ads_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ad.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Ads_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Ads_Issue.CreateAds_Issue(System.Int64,System.Int32,System.Int64)">
 <summary>
 Create a new Ads_Issue object.
 </summary>
 <param name="adId">Initial value of the AdId property.</param>
 <param name="siteId">Initial value of the SiteId property.</param>
 <param name="issueID">Initial value of the IssueID property.</param>
</member>
<member name="P:Analysis.Ads_Issue.AdId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.SiteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.Ad">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.AdReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Ads_Issue.IssueReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.AutomationPlan">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.AutomationPlan.CreateAutomationPlan(System.Int32,System.String)">
 <summary>
 Create a new AutomationPlan object.
 </summary>
 <param name="siteID">Initial value of the SiteID property.</param>
 <param name="planType">Initial value of the PlanType property.</param>
</member>
<member name="P:Analysis.AutomationPlan.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.StartAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.EndAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.IntervalDay">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.WeekDays">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SenderName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SenderEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.TemplateID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.MultiTemplate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.Status">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SplitContactCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.URL">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.Day_Of_Week">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.ContactList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.CampaignStatus">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.ScheduleTimeInteval">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.ListType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SearchAPIType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SearchStartDayInterval">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SearchEndDayInterval">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.UrlSpecialCode">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.LimitQuantity">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SellerEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.TimeLimit">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.TriggerForNFC">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.SubjectForNFC">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.ShopType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.displayCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.bannerFromUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.bannerRegex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.bannerIndex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.CreateTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.LastModifyTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.ExcludeList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.IsAssociateSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.ContactType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.TemplateEngine">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.PlanType1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.PlanType1Reference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.Template">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationPlan.TemplateReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.AutomationSite.CreateAutomationSite(System.Int32)">
 <summary>
 Create a new AutomationSite object.
 </summary>
 <param name="siteid">Initial value of the siteid property.</param>
</member>
<member name="P:Analysis.AutomationSite.siteid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.SiteName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.SpreadLogin">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.AppID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.DllType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.SiteUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.volumn">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.LogoImgUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.CreateTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Ads">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Ads_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Issues">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Products">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.Products_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.SentLogs">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutomationSite.AutomationPlans">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.BannerRegex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.BannerRegex.CreateBannerRegex(System.Int32)">
 <summary>
 Create a new BannerRegex object.
 </summary>
 <param name="id">Initial value of the ID property.</param>
</member>
<member name="P:Analysis.BannerRegex.ID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.siteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.planType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.bannerFormUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.bannerStartIndex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.bannerEndIndex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.bannerRegText">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.srcRegText">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.hrefRegText">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.cookie">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.pageEncoding">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.BannerRegex.noRepeatSentDays">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Category">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Category.CreateCategory(System.Int32)">
 <summary>
 Create a new Category object.
 </summary>
 <param name="categoryID">Initial value of the CategoryID property.</param>
</member>
<member name="P:Analysis.Category.CategoryID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.ParentID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.Category1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.LastUpdate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.Description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.Url">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.PictureUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.PictureAlt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.SizeHeight">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.SizeWidth">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.Gender">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.BackUpUrls">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.Ads">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Category.Products">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Clicks_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Clicks_Issue.CreateClicks_Issue(System.Int64)">
 <summary>
 Create a new Clicks_Issue object.
 </summary>
 <param name="clickID">Initial value of the ClickID property.</param>
</member>
<member name="P:Analysis.Clicks_Issue.ClickID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Clicks_Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Clicks_Issue.SpreadCampId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Clicks_Issue.SubEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Clicks_Issue.ClickUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Clicks_Issue.ClickDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Clicks_Issue.siteid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.ContactLists_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.ContactLists_Issue.CreateContactLists_Issue(System.Int64,System.String)">
 <summary>
 Create a new ContactLists_Issue object.
 </summary>
 <param name="issueID">Initial value of the IssueID property.</param>
 <param name="contactList">Initial value of the ContactList property.</param>
</member>
<member name="P:Analysis.ContactLists_Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactLists_Issue.ContactList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactLists_Issue.SendTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactLists_Issue.SendingStatus">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactLists_Issue.Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactLists_Issue.IssueReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.ContactSetting">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.ContactSetting.CreateContactSetting(System.Int32,System.String,System.String)">
 <summary>
 Create a new ContactSetting object.
 </summary>
 <param name="siteId">Initial value of the SiteId property.</param>
 <param name="planType">Initial value of the PlanType property.</param>
 <param name="contactName">Initial value of the ContactName property.</param>
</member>
<member name="P:Analysis.ContactSetting.SiteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactSetting.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactSetting.ContactName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactSetting.IsNTES">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ContactSetting.MaxSend">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Convertions_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Convertions_Issue.CreateConvertions_Issue(System.Int64)">
 <summary>
 Create a new Convertions_Issue object.
 </summary>
 <param name="convertID">Initial value of the ConvertID property.</param>
</member>
<member name="P:Analysis.Convertions_Issue.ConvertID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.SpreadCampId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.SubEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.ConvertType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.ConvertUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.ConvertValue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.ConvertTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Convertions_Issue.siteid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Issue.CreateIssue(System.Int64,System.DateTime)">
 <summary>
 Create a new Issue object.
 </summary>
 <param name="issueID">Initial value of the IssueID property.</param>
 <param name="issueDate">Initial value of the IssueDate property.</param>
</member>
<member name="P:Analysis.Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.IssueDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Subject">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.SentStatus">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.SpreadCampId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.NtesCampId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Ads_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.ContactLists_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Issues1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Issues1Reference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Issue1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Issue1Reference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.PlanType1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.PlanType1Reference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Issue.Products_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Opens_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Opens_Issue.CreateOpens_Issue(System.Int64)">
 <summary>
 Create a new Opens_Issue object.
 </summary>
 <param name="openID">Initial value of the OpenID property.</param>
</member>
<member name="P:Analysis.Opens_Issue.OpenID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Opens_Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Opens_Issue.SpreadCampId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Opens_Issue.SubEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Opens_Issue.OpenDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Opens_Issue.siteid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.PlanType.CreatePlanType(System.String)">
 <summary>
 Create a new PlanType object.
 </summary>
 <param name="planType1">Initial value of the PlanType1 property.</param>
</member>
<member name="P:Analysis.PlanType.PlanType1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.PlanType.Description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.PlanType.Issues">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.PlanType.SplitContactLists">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.PlanType.Templates">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.PlanType.AutomationPlans">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Product">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Product.CreateProduct(System.Int64)">
 <summary>
 Create a new Product object.
 </summary>
 <param name="prodouctID">Initial value of the ProdouctID property.</param>
</member>
<member name="P:Analysis.Product.ProdouctID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Prodouct">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Url">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Price">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Discount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Sales">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.PictureUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.LastUpdate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Currency">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.PictureAlt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.SizeHeight">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.SizeWidth">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.TbScore">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.TbComment">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.FreeShippingImg">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.ShipsImg">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.ExpiredDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.PublishDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Products_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Product.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.ProductPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.ProductPath.CreateProductPath(System.Int64,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32)">
 <summary>
 Create a new ProductPath object.
 </summary>
 <param name="id">Initial value of the ID property.</param>
 <param name="siteId">Initial value of the siteId property.</param>
 <param name="planType">Initial value of the planType property.</param>
 <param name="prodcate">Initial value of the prodcate property.</param>
 <param name="cookie">Initial value of the cookie property.</param>
 <param name="pageEncoding">Initial value of the pageEncoding property.</param>
 <param name="noRepeatSentDays">Initial value of the noRepeatSentDays property.</param>
</member>
<member name="P:Analysis.ProductPath.ID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.siteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.planType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.fileType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.prodcate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.cateParam">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.prodPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.productPath1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.productAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.urlPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.urlAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.pricePath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.priceAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.discountPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.discountAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.salesPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.salesAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.pictureUrlPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.pictureUrlAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.descriptionPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.descriptionAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.pictureAltPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.pictureAltAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.currencyChar">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.prodDisplayCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.cookie">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.pageEncoding">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.noRepeatSentDays">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.issueDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.issueDateAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.ProductPath.validityPeriod">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Products_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Products_Issue.CreateProducts_Issue(System.Int64,System.Int32,System.Int64,System.String,System.Int64)">
 <summary>
 Create a new Products_Issue object.
 </summary>
 <param name="productId">Initial value of the ProductId property.</param>
 <param name="siteId">Initial value of the SiteId property.</param>
 <param name="issueID">Initial value of the IssueID property.</param>
 <param name="sectionID">Initial value of the SectionID property.</param>
 <param name="categoryId">Initial value of the CategoryId property.</param>
</member>
<member name="P:Analysis.Products_Issue.ProductId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.SiteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.IssueID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.SectionID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.Priority">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.CategoryId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.IssueReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.Product">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.ProductReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.Section">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Products_Issue.SectionReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.RssContactList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.RssContactList.CreateRssContactList(System.Int32)">
 <summary>
 Create a new RssContactList object.
 </summary>
 <param name="contactListId">Initial value of the ContactListId property.</param>
</member>
<member name="P:Analysis.RssContactList.ContactListId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssContactList.RssId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssContactList.ContactListName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.RssSubscription">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.RssSubscription.CreateRssSubscription(System.Int32,System.Int32)">
 <summary>
 Create a new RssSubscription object.
 </summary>
 <param name="rssId">Initial value of the RssId property.</param>
 <param name="siteID">Initial value of the SiteID property.</param>
</member>
<member name="P:Analysis.RssSubscription.RssId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.URL">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.SpreadLogin">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.StartAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.EndAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.IntervalDay">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.WeekDays">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.SenderName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.SenderEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.Template">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.Status">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.ExcludeSubject">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.DefaultSubject">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.rssType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.AppID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.RssSubscription.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Section">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Section.CreateSection(System.String)">
 <summary>
 Create a new Section object.
 </summary>
 <param name="sectionID">Initial value of the SectionID property.</param>
</member>
<member name="P:Analysis.Section.SectionID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Section.Section1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Section.Products_Issue">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.SentLog">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.SentLog.CreateSentLog(System.Int32)">
 <summary>
 Create a new SentLog object.
 </summary>
 <param name="sentLogId">Initial value of the SentLogId property.</param>
</member>
<member name="P:Analysis.SentLog.SentLogId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.RssId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.Subject">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.LastSentAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.AutomationSite">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SentLog.AutomationSiteReference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.SplitContactList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.SplitContactList.CreateSplitContactList(System.String,System.String,System.Boolean,System.Int32)">
 <summary>
 Create a new SplitContactList object.
 </summary>
 <param name="shopName">Initial value of the ShopName property.</param>
 <param name="contactListName">Initial value of the ContactListName property.</param>
 <param name="flag">Initial value of the Flag property.</param>
 <param name="splitID">Initial value of the SplitID property.</param>
</member>
<member name="P:Analysis.SplitContactList.ShopName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.ContactListName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.RssType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.Flag">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.SplitID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.SendTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.SendingStatus">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.PlanType1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.SplitContactList.PlanType1Reference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Template">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Template.CreateTemplate(System.Int32,System.String,System.String,System.String)">
 <summary>
 Create a new Template object.
 </summary>
 <param name="tid">Initial value of the Tid property.</param>
 <param name="userName">Initial value of the UserName property.</param>
 <param name="templateName">Initial value of the TemplateName property.</param>
 <param name="contents">Initial value of the Contents property.</param>
</member>
<member name="P:Analysis.Template.Tid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.UserName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.TemplateName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.Contents">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.RssID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.tType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.LatestModifyTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.PlanType1">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.PlanType1Reference">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Template.AutomationPlans">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.TemplateInfo">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.TemplateInfo.CreateTemplateInfo(System.Int64)">
 <summary>
 Create a new TemplateInfo object.
 </summary>
 <param name="siteId">Initial value of the SiteId property.</param>
</member>
<member name="P:Analysis.TemplateInfo.SiteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateInfo.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateInfo.SortedCates">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateInfo.DisplayCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateInfo.Modified">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.TemplateLibrary">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.TemplateLibrary.CreateTemplateLibrary(System.Int64)">
 <summary>
 Create a new TemplateLibrary object.
 </summary>
 <param name="tid">Initial value of the Tid property.</param>
</member>
<member name="P:Analysis.TemplateLibrary.Tid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateLibrary.Contents">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateLibrary.Description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateLibrary.Demo">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.TemplateLibrary.CategoryId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.Token">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.Token.CreateToken(System.Int32)">
 <summary>
 Create a new Token object.
 </summary>
 <param name="id">Initial value of the id property.</param>
</member>
<member name="P:Analysis.Token.id">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Token.type">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Token.shortTimeToken">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Token.longTimeToken">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.Token.longTokenExpireDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.AutoPlanInfo">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.AutoPlanInfo.CreateAutoPlanInfo(System.Int32,System.String)">
 <summary>
 Create a new AutoPlanInfo object.
 </summary>
 <param name="siteID">Initial value of the SiteID property.</param>
 <param name="planType">Initial value of the PlanType property.</param>
</member>
<member name="P:Analysis.AutoPlanInfo.SiteID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.PlanType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.StartAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.EndAt">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.IntervalDay">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.WeekDays">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SenderName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SenderEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.TemplateID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.Status">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SplitContactCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.URL">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.Categories">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.Day_Of_Week">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.ContactList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.CampaignStatus">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.ScheduleTimeInteval">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SearchAPIType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SearchStartDayInterval">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SearchEndDayInterval">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.UrlSpecialCode">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.ListType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.LimitQuantity">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SellerEmail">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.TimeLimit">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.TriggerForNFC">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.SubjectForNFC">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.ShopType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.displayCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.bannerFromUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.bannerRegex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.bannerIndex">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.CreateTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.LastModifyTime">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.sitename">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.spreadLogin">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.appid">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.dlltype">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.siteurl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.description">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.logoimgurl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.MultiTemplate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.ExcludeList">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.AutoPlanInfo.ContactType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="T:Analysis.CateProdpath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.CateProdpath.CreateCateProdpath(System.Int32,System.Int64,System.String,System.String)">
 <summary>
 Create a new CateProdpath object.
 </summary>
 <param name="cateId">Initial value of the cateId property.</param>
 <param name="id">Initial value of the ID property.</param>
 <param name="issueDate">Initial value of the issueDate property.</param>
 <param name="issueDateAttri">Initial value of the issueDateAttri property.</param>
</member>
<member name="P:Analysis.CateProdpath.cateId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.cateName">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.cateUrl">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.siteId">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.planType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.fileType">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.prodcate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.cateParam">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.prodPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.productPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.productAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.urlPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.urlAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.pricePath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.priceAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.discountPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.discountAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.salesPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.salesAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.pictureUrlPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.pictureUrlAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.descriptionPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.descriptionAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.pictureAltPath">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.pictureAltAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.currencyChar">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.prodDisplayCount">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.cookie">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.pageEncoding">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.noRepeatSentDays">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.ID">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.issueDate">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.issueDateAttri">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="P:Analysis.CateProdpath.validityPeriod">
 <summary>
 No Metadata Documentation available.
 </summary>
</member>
<member name="M:Analysis.DresslilyNew.InsertCategories(System.Int32)">
 <summary>
 往数据库中categories插入数据
 </summary>
 <param name="siteID">siteid </param>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.InsertProductIssueAll(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
 <summary>
 添加数据到Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="section"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.GetListProducts(System.String,System.Int32,System.DateTime,System.String,System.Int32,System.String)">
 <summary>
 获取指定URL页面的产品信息
 </summary>
 <param name="pageUrl"></param>
 <param name="siteId"></param>
 <param name="nowTime"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.GetListAdids(System.String,System.Int32,System.Int32,System.DateTime,System.String)">
 <summary>
 获取指定URL页面的Banner条信息
 </summary>
 <param name="pageUrl"></param>
 <param name="siteid"></param>
 <param name="nowTime"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.GetProductList(System.Int32)">
 <summary>
 获取指定站点的products表中的所有产品
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.GetCategoryId(System.Int32,System.String)">
 <summary>
 获取指定站点的指定CategoryName的CategoryId
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.InsertAd(Analysis.Ad,System.Collections.Generic.List{Analysis.Ad},System.Int32)">
 <summary>
 将获得的Ad信息保存至Ads表中。
 </summary>
 <param name="ad"></param>
 <param name="listAd"></param>
 <param name="categoryID"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.JudgeProduct(System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.JudgeAd(System.String,System.Collections.Generic.List{Analysis.Ad})">
 <summary>
 判断即将插入的Ad的URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.DresslilyNew.AddIssueSubject(System.Int32,System.Int32,System.String,System.String)">
 <summary>
 获得邮件的subject
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Eachbuyer.InsertCategories(System.Int32)">
 <summary>
 往数据库中categories插入数据
 </summary>
 <param name="siteID">siteid </param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EBusinessSite.GetProductList(System.String,System.Int32)">
 <summary>
 获取统一dom结构的店铺页面上的产品
 </summary>
 <param name="pageUrl"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EBusinessSite.GetShopNameandLogo">
 <summary>
 获取店铺的名称及logo。其中list(0)-->shopName , list(1)-->Logo
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EBusinessSite.MatchBannerImgs(System.String)">
 <summary>
 返回排序好的一个复合字符串，'(1；2；5；3；4；6$$h1；h2；h3；h4；h5;$$s1,s2,s3,s4,s5）
 第一部分是排好的索引，第二部分是原始图源串，第三部分为原始图大小
 用第一部分的索引，取第二第三部分的信息
 </summary>
 <param name="bannerFromUrl"></param>
 <returns></returns>
</member>
<member name="M:Analysis.EBusinessSite.SortBanner(System.String,System.String@)">
 <summary>
 对一串href分析并排序，好banner排最前，且从大到小
 </summary>
 <param name="hrefs">以；分隔的url</param>
 <returns>返回字典，key为序号，value为尺寸</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EBusinessSite.ThumbnailCallback">
 <summary>
  callback of generate  banner thumbnail to scan every pixel of a picture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EBusinessSite.IsGoodBanner(System.String)">
 <summary>
 判断是否为符合条件的banner
 </summary>
 <param name="imgurl">传入url</param>
 <returns>匹配则返回true</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.JsonHelper.ToJsonString(System.Object)">
 <summary>
 Convert An Object to Json String
 </summary>
 <param name="data"></param>
 <returns></returns>
</member>
<member name="M:Analysis.JsonHelper.ParseFromJson``1(System.String)">
 <summary>
 Convert a Json String To An Object
 </summary>
 <typeparam name="T"></typeparam>
 <param name="json"></param>
 <returns></returns>
</member>
<member name="M:Analysis.HKPL.FetchfbPosts(System.String,System.Int32,System.String,System.Int32)">
 <summary>
 获取fb的一个page上发布的post，并返回List(Of Product)
 </summary>
 <param name="fbPageName">fb的page名</param>
 <param name="timeLimit">指定某个时间之后的所有post</param>
 <param name="accessToken"></param>
 <param name="siteID"></param>
 <returns>List(Of Product)</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.HtmlPageUtility.LoadXmlDoc(System.String,System.String)">
 <summary>
 将一个rss Url内容装载进xmldocument，并将其返回
 </summary>
 <param name="url"></param>
 <param name="pageEncoding">请求url时的编码方式</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.IndependentWebSite.SetSubject(System.Int32,System.Int32,System.String,System.String,System.String)">
 <summary>
 从数据库Promotion产品中获得并设置Subject信息如个性化，刊号，日期等
 </summary>
 <param name="issueId"></param>
 <remarks>可以新增自定义标签，并在此处实现</remarks>
</member>
<member name="M:Analysis.K11forFBSeo.FetchfbPosts(System.String,System.Int32,System.String,System.Int32)">
 <summary>
 获取fb的一个page上发布的post，并返回List(Of Product)
 </summary>
 <param name="fbPageName">fb的page名</param>
 <param name="limit">指定获取前几个post（按从新到旧）</param>
 <param name="accessToken"></param>
 <param name="siteID"></param>
 <param name="planType"></param>
 <param name="issueID"></param>
 <param name="categoryName">产品所属分类名</param>
 <param name="section">"CA","DA","NE"等</param>
 <returns>List(Of Product)</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetHtmlDocument(System.String,System.Int32,System.Int32)">
 <summary>
 根据URL获取网页的HtmlDocument
 </summary>
 <param name="url">网页的URL</param>
 <param name="iTimeOut">设置网页加载的时间</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetAsynHtmlStrTmall(System.String,System.Int32)">
 <summary>
 获取ali的异步请求asynSearch.htm页面的请求string
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetHtmlStringByUrlAli(System.String,System.Int32)">
 <summary>
 请求tmall或baobao，以txt类型返回请求的html
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetHtmlStringByUrl(System.String,System.Int32)">
 <summary>
 以txt形式返回请求页面的内容。推荐使用其重载函数GetHtmlStringByUrl（pageUrl,cookie,refer)
 </summary>
 <param name="pageUrl">请求页面url</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetHtmlStringByUrl(System.String,System.String,System.String,System.Int32)">
 <summary>
 以txt形式返回请求页面的内容。推荐使用。
 </summary>
 <param name="pageUrl">请求页面Url</param>
 <param name="cookie">cookie</param>
 <param name="refer">请求refer</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.DownloadImage(System.String,System.String,System.String,System.Int32)">
 <summary>
 下载图片保存至本地
 </summary>
 <param name="imageUrl"></param>
 <param name="filePath"></param>
 <param name="fileName"></param>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetRssPageString(System.String)">
 <summary>
 get the page content according to the rssUrl of website
 </summary>
 <param name="rssUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.addDominForUrl(System.String,System.String)">
 <summary>
 补全图片imgSRC ，产品herf属性的域名部分
 </summary>
 <param name="domain">应去除末尾/,以防重复</param>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.AddHttpForAli(System.String)">
 <summary>
 为阿里的url及imgUrl增加省略的“http”头部
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.LoadXmlDoc(System.String,System.String)">
 <summary>
 将一个rss Url内容装载进xmldocument，并将其返回
 </summary>
 <param name="url"></param>
 <param name="pageEncoding">请求url时的编码方式</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.LoadXmlDoc(System.String)">
 <summary>
 将一个rss Url内容装载进xmldocument，并将其返回
 </summary>
 <param name="url"></param>
 <param name="pageEncoding">请求url时的编码方式</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
 <summary>
 验证证书
 </summary>
 <param name="sender"></param>
 <param name="certificate"></param>
 <param name="chain"></param>
 <param name="sslPolicyErrors"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListCategory(System.Int32)">
 <summary>
 根据siteId获取某个商家的产品分类
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertListCategory(System.Collections.Generic.List{Analysis.Category})">
 <summary>
 将多个Category插入到Categories表中
 </summary>
 <param name="listCategory"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertCategory(Analysis.Category)">
 <summary>
 将一个Category插入到Categories表中
 </summary>
 <param name="myCategory"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertOrUpdateCate(Analysis.Category,System.Int32)">
 <summary>
 插入或者更新Category的内容
 </summary>
 <param name="myCategory"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateListCategory(System.Collections.Generic.List{Analysis.Category})">
 <summary>
 更新多个Category，如果Url相同的数据，则更新Categories表中数据，2013/4/24新加
 </summary>
 <param name="listCategory"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateCategory(Analysis.Category)">
 <summary>
 更新一个Category，如果Url相同的数据，则更新Categories表中数据，2013/4/27新加
 </summary>
 <param name="myCategory"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListCateUrl(System.Int32)">
 <summary>
 获取某个账号下的所有分类URL
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListCategorys(System.Int32,System.String[])">
 <summary>
 根据名字获取某个账号下对应的分类List
 </summary>
 <param name="siteId"></param>
 <param name="arrCategoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetCategoryId(System.Int32,System.String)">
 <summary>
 根据某个分类的名字获取某个账户下面的分类Id
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetCategory(System.Int32,System.String)">
 <summary>
 根据某个分类的名字获取某个账户下面的分类对象
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetOneCategory(System.Int32,System.Int32)">
 <summary>
 根据cateid获取一个分类对象
 </summary>
 <param name="siteid"></param>
 <param name="cateId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetCategories(System.String,System.Int32)">
 <summary>
 cates的参数规范cate1^cate2...
 </summary>
 <param name="cates"></param>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetCategoryItems(System.String,System.Int32)">
 <summary>
 cates的参数规范cate1^cate2...返回cate1，care1_url;格式的string
 </summary>
 <param name="cates"></param>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertOrUpdateCategory(System.Collections.Generic.List{Analysis.Category})">
 <summary>
 将category数据整理进数据库。如果cateName存在，则更新此category。如果cateName不存在则添加至数据库
 </summary>
 <param name="listCategory"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListProduct(System.Int32)">
 <summary>
 根据siteId获取某个商家的产品链表URL
 </summary>
 <param name="siteId"></param>
 <returns>返回产品的Url链表</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListProduct2(System.Int32)">
 <summary>
 根据siteId获取某个商家的产品链表
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertListProduct(System.Collections.Generic.List{Analysis.Product},System.String,System.Int32)">
 <summary>
 将多个Product插入到Products表中
 </summary>
 <param name="listProduct"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertSingleProduct(Analysis.Product,System.String,System.Int32)">
 <summary>
 将一个产品插入到Products表中
 </summary>
 <param name="myProduct"></param>
 <param name="strCategory"></param>
 <param name="siteId"></param>
 <returns>返回插入的产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertSingleProduct2(Analysis.Product,System.String,System.Int32)">
 <summary>
 将一个产品插入到Products表中，
 改进InsertSingleProduct()方法
 </summary>
 <param name="myProduct"></param>
 <param name="categoryUrl"></param>
 <param name="siteId"></param>
 <returns>返回插入的产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertOrUpdateProduct(Analysis.Product,System.String,System.Int32,System.DateTime)">
 <summary>
 获取或者更新单个产品信息到Products表中
 </summary>
 <param name="myProduct"></param>
 <param name="categoryUrl"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertOrUpdateProduct(Analysis.Product,System.String,System.String,System.Int32)">
 <summary>
 根据categoryUrl或者categoryName获取或者更新单个产品信息到Products表中
 </summary>
 <param name="myProduct"></param>
 <param name="categoryUrl">如果categoryUrl不为空，则categoryName为空；</param>
 <param name="categoryName">如果categoryName不为空，则categoryUrl为空；</param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateListProduct(System.Collections.Generic.List{Analysis.Product},System.String,System.Int32)">
 <summary>
 更新多个产品的产品信息到Products表中
 </summary>
 <param name="listProduct"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateSingleProduct(Analysis.Product,System.String,System.Int32,System.DateTime)">
 <summary>
 更新一个产品的产品信息到Products表中；
 如果该产品不存咋，则添加一条新纪录
 </summary>
 <param name="myProduct"></param>
 <param name="strCategory"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateSingleProduct2(Analysis.Product,System.String,System.Int32,System.DateTime)">
 <summary>
 更新一个产品的产品信息到Products表中；
 如果该产品不存咋，则添加一条新纪录（改进UpdateSingleProduct()方法）
 </summary>
 <param name="myProduct"></param>
 <param name="categoryUrl"></param>
 <param name="siteId"></param>
 <param name="nowTime"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.IsProductSent(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 判断指定时间内产品是否已经在邮件中发送   如果是HO、HA则在HO、HA内进行比较，如果是HPI 则在HO、HA、HPI内进行比较
 </summary>
 <param name="siteID"></param>
 <param name="productUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.IsProductSent2(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 判断指定时间内产品是否已经在邮件中发送，在同一个PlanType内进行比较，缩小IsProductSent()的查询范围
 </summary>
 <param name="siteID"></param>
 <param name="productUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.IsProductSent(System.String,System.String,System.String,System.String)">
 <summary>
 判断指定时间内产品是否已经在邮件中发送，同所有的plantype进行比较
 </summary>
 <param name="siteID"></param>
 <param name="productUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetProductList(System.Int32)">
 <summary>
 获取指定站点的products表中的所有产品，Dora，2014.02.11
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertProduct(Analysis.Product,System.DateTime,System.Int32,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 将一个product数据插入到Product表中，如果Product表中已存在此条记录，则update，同时不修改此product的CategoryID  Dora 2014-02-11
 </summary>
 <param name="aProductInList"></param>
 <param name="now"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertK11Product(Analysis.Product,System.DateTime,System.Int32,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 将一个K11 facebook 的product数据插入到Product表中，
 如果Product表中已存在此条记录，则update
 上一个方法InsertProduct()不同，这个产品重复判断的方法不一样,使用isNewFbProduct()
 </summary>
 <param name="aProductInList"></param>
 <param name="now"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.InsertOrUpdateProduct(Analysis.Product,System.DateTime,System.Int32,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 插入或更新product表，（即使有多个category包含此产品）
 </summary>
 <param name="aProductInList"></param>
 <param name="now"></param>
 <param name="categoryId"></param>
 <param name="existProducts"></param>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.JudgeOneProduct(System.String,System.Int32,System.Int64,System.Int32)">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在（siteid,days天内），如果存在，返回false
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.JudgeOneProductOfSite(System.String,System.Int32)">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在（siteid），如果存在，返回Productid,不存在返回-1
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isNewProduct(Analysis.Product,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在，如果存在，返回false Dora 2014-02-11
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isNewK11Product(Analysis.Product,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的Productd的url和description，对应Facebook的产品，不能判断Prodouct，因为明明相同的产品，每期Prodouct会自动根据日期命名，会变动，所以不能比较
 </summary>
 <param name="product"></param>
 <param name="list"></param>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.InsertPOProductIssue(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.String)">
 <summary>
 将产品添加到Products_Issue表中，并使用1个产品作为Promotion的内容
 </summary>
 <param name="listProductId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertProductIssue(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String)">
 <summary>
 将产品添加到Products_Issue表中
 </summary>
 <param name="listProductId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertProductIssue(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
 <summary>
 将N个产品每期轮番添加到Products_Issue表中
 </summary>
 <param name="listProductId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="sectionId"></param>
 <param name="iTakeCount">模板中产品的个数</param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.SearchPromotionProduct(System.Int32,System.String)">
 <summary>
 查询Products_Issue表中指定SectionID的产品
 </summary>
 <param name="issueId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetPromotionProduct(System.Int32)">
 <summary>
 获取Products_Issue表中SectionID为"PO"的产品名
 </summary>
 <param name="issueId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertSinglePIssue(System.Int32,System.Int32,System.Int32,System.String)">
 <summary>
 添加单个产品到Products_Issue表中
 </summary>
 <param name="productId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="sectionId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertProductsIssue(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32},System.Int32)">
 <summary>
 将获取的productIDList 中的productid对应IssueIdea插入到ProductIssue表中 Dora，2014-02-11
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="sectionId"></param>
 <param name="listProductId"></param>
 <param name="iProIssueCount"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetFirstProductSubject(System.Int32)">
 <summary>
 获取第一个产品的ProductName
 </summary>
 <param name="issueId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetFirstProductSubject(System.Int32,System.String)">
 <summary>
 获取第一个产品的ProductName
 </summary>
 <param name="issueId"></param>
 <param name="issueId">产品section，CA，NE，DA等</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetTopNCateProdUrl(System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 获取某个分类下的前N个产品
 </summary>
 <param name="cateUrl"></param>
 <param name="issueId"></param>
 <param name="topN">前N期产品的个数</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetTopNSectionProdUrl(System.Int32,System.Int32,System.String,System.Int32)">
 <summary>
 获取某个Section下的前N期的产品URL
 </summary>
 <param name="issueId"></param>
 <param name="topN">页面的某一个块的产品个数-填充产品的个数</param>
 <param name="sectionId">产品所属的SectionId，在表Sections中；如果为空，则获取所有</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertIssueSubject(System.String,System.Int32)">
 <summary>
 把Subject内容插入到Issues表中
 </summary>
 <param name="subject"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertIssueSubject(System.Int32,System.String)">
 <summary>
 把Subject写入到Issue表中
 </summary>
 <param name="issueId"></param>
 <param name="subject"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetSentCount(System.Int32,System.Int32,System.String)">
 <summary>
 获取今年某个账户下面的某个PlanType发送的次数
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.AddIssueSubject(System.String,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 获得邮件的subject, siteName Deals[New Arrivals] For MMM.yyyy.Vol.** ,Dora 2014-02-11
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.FetchBanner(System.String,System.String)">
 <summary>
 使用正则表达式匹配所有的banner出来
 </summary>
 <param name="url"></param>
 <param name="adType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListAd(System.Int32)">
 <summary>
 根据siteId返回Ads表中的数据
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetAdidForIssue(System.Int32,System.Int64,System.Int32)">
 <summary>
 get exisit adid of site
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetTopNAds(System.Int32,System.Int32)">
 <summary>
 根据siteId返回Ads表中的前N条数据
 </summary>
 <param name="siteId"></param>
 <param name="counter"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetTopNAdsUrl(System.Int32,System.Int32)">
 <summary>
 根据siteId返回Ads表中的前N条数据的Ad Url
 </summary>
 <param name="siteId"></param>
 <param name="counter"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertAds(System.Collections.Generic.List{Analysis.Ad},System.Int32)">
 <summary>
 插入数据到Ads表中
 </summary>
 <param name="insertListAds"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateAds(System.Collections.Generic.List{Analysis.Ad},System.Int32)">
 <summary>
 更新Ads表中的数据
 </summary>
 <param name="updateListAds"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertOrUpdateAd(Analysis.Ad)">
 <summary>
 插入或者更新一个产品到Ads表中
 </summary>
 <param name="ad"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertAd(Analysis.Ad,System.Collections.Generic.List{Analysis.Ad},System.Int32)">
 <summary>
 将获得的Ad信息保存至Ads表中。,Droa,2014.02.08
 </summary>
 <param name="ad">ad即一个banner对象</param>
 <param name="listAd"></param>
 <param name="categoryID"></param>
 <returns></returns>
 <remarks>若不存在则new一个ad若存在则更新Hoyho2016/2/25</remarks>
</member>
<member name="M:Analysis.EFHelper.InsertSingleAd(Analysis.Ad,System.Int32)">
 <summary>
 Insert one ad into Ads table,return its id
 </summary>
 <param name="url"></param>
 <param name="picurl"></param>
 <param name="siteid"></param>
 <param name="type"></param>
 <param name="lastUpdate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.IsNewBanner(Analysis.Ad,System.Collections.Generic.List{Analysis.Ad})">
 <summary>
 判断即将插入的Ad的URL是否在数据库中已经存在，如果存在，返回false,Droa,2014.02.08
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isADexist(System.String,System.Int32)">
 <summary>
 判断ad是否已存入数据库，存入返回adid，没存返回-1
 </summary>
 <param name="url"></param>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertAdsIssue(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 插入数据到Ads_Issue，每次轮番发送
 </summary>
 <param name="listAdsId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="adNumbers">在Promotion处插入产品的个数</param>
 <param name="totalAds">在Ads表中Type="P"的产品的个数</param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertAdsIssue2(System.Collections.Generic.List{System.Int32},System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 将一条Banner的数据插入到Ads_Issue表中，轮番发送
 </summary>
 <param name="listAdsId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="totalNumber"></param>
 <param name="insertNumber"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertSingleAdsIssue(System.Int32,System.Int32,System.Int32)">
 <summary>
 添加一条记录到Ads_Issue表中
 </summary>
 <param name="adId"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertAdsIssue(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32)">
 <summary>
 添加记录到ads_issue表，
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="listAdId"></param>
 <param name="iProIssueCount"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetListAd(System.Int32,System.Int32)">
 <summary>
 根据siteId 和IssueId查询Ads_Issue表中数据，获取Ads表中的数据
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isAdSent(System.String,Analysis.Ad,System.String,System.String)">
 <summary>
 判断指定时间内Ad是否已经在邮件中发送,已发送，则返回True，否则false
 </summary>
 <param name="siteID"></param>
 <param name="adUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isAdSent(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 判断指定时间内Ad是否已经在邮件中发送,已发送，则返回True，否则false,判断重复的条件是跳转到地址的Url
 </summary>
 <param name="siteID"></param>
 <param name="adUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <param name="planType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isAdSentInRecentSixIssue(System.String,System.String,System.String)">
 <summary>
 控制内获取的Ad在最近6次发送的issue不重复不重复,重复返回ad此次应发的adid，
 </summary>
 <param name="siteID"></param>
 <param name="adUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <param name="planType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isAdSent(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 判断指定时间内Ad是否已经在邮件中发送,已发送，则返回True，否则false
 </summary>
 <param name="siteID"></param>
 <param name="adUrl"></param>
 <param name="StartDate"></param>
 <param name="EndDate"></param>
 <param name="planType"></param>
 <param name="isImg">True：判断重复的条件是img的链接；false：判断重复的条件是跳转到地址的Url</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertInbox(System.Int32)">
 <summary>
 把进箱率的添加到ContactLists_Issue表中
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertContactList(System.Int32,System.String,System.String)">
 <summary>
 将某个特定的List名加入到ContactLists_Issue表中
 </summary>
 <param name="IssueID"></param>
 <param name="contactList"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertContactList(System.Int32,System.String[],System.String)">
 <summary>
 将一个或多个List名插入到发送表ContactLists_Issue表中
 </summary>
 <param name="IssueId"></param>
 <param name="ContactListArr"></param>
 <param name="sendingStatus"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.InsertSplitContactList(Analysis.SplitContactList)">
 <summary>
 插入一条SplitContactList记录
 </summary>
 <param name="s"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetSplitContactLists(System.Int32)">
 <summary>
 获得指定SiteId下的Split Contact Lists
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetRssSubscription(System.Int32)">
 <summary>
 返回RssSubscription对象
 </summary>
 <param name="SiteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetMaxRssId">
 <summary>
 返回最大的RssSubscriptions RssId
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.Log(System.Exception)">
 <summary>
 写错误日志到日志文件中
 </summary>
 <param name="Ex"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetPlantype(System.Int32)">
 <summary>
 获取到一个目前没有使用的plantype，仅供HO,HA类型
 </summary>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetPlantype(System.Int32,System.Boolean)">
 <summary>
 获取到一个目前没有使用的plantype,根据是否是触发返回HP组别还是{"HO","HA"}组别
 </summary>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.isTempNameExist(System.Int32,System.String)">
 <summary>
 同一个店铺下是否存在此模板名，存在返回true，否则返回false
 </summary>
 <param name="siteid"></param>
 <param name="tempName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.SetSubject(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
 <summary>
 从数据库Promotion产品中获得并设置Subject信息如个性化，刊号，日期等
 </summary>
 <param name="issueId"></param>
 <remarks>可以新增自定义标签，并在此处实现</remarks>
</member>
<member name="M:Analysis.EFHelper.CreateContactList(System.Int32,System.Int32,System.String,System.String,System.Int32,Analysis.ChooseStrategy,System.String,System.String,System.String)">
 <summary>
 调用spreadApi SearchContacts（） 函数，创建一个未点击任何分类的联系人列表 
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="saveListName"></param>
 <param name="daySpan"></param>
 <param name="strategy"></param>
 <param name="sendStatus"></param>
 <param name="loginEmail"></param>
 <param name="appId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.CreateContactList(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32,Analysis.ChooseStrategy,System.String,System.String,System.String)">
 <summary>
 调用spreadApi SearchContacts（） 函数，创建一个点击了指定分类的联系人列表 
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="categoryName"></param>
 <param name="saveListName"></param>
 <param name="daySpan"></param>
 <param name="strategy"></param>
 <param name="sendStatus"></param>
 <param name="loginEmail"></param>
 <param name="appId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetBannerRegex(System.Int32,System.String)">
 <summary>
 获取第一条bannerRegex记录
 </summary>
 <param name="siteid"></param>
 <param name="plantype"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetProductPaths(System.Int32,System.String,System.String)">
 <summary>
 获取cates相关联的productPath记录
 </summary>
 <param name="siteid"></param>
 <param name="plantype"></param>
 <param name="cates">格式如：'Cate1','Cate2','Cate2'</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateProductPathGroup(System.Collections.Generic.List{Analysis.ProductPath})">
 <summary>
 
 </summary>
 <param name="listproductPath"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetBanner(System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)">
 <summary>
 获取banner图片及对应url(仅适用tmall/taobao)
 </summary>
 <param name="siteId"></param>
 <param name="Issueid"></param>
 <param name="categoryName">banner所属分类名</param>
 <param name="planType"></param>
 <param name="pageUrl">banner图所在链接</param>
 <param name="bannerImgIndex">banner正则匹配结果的索引</param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetBanner(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
 <summary>
 获取banner图片及对应url(仅适用tmall/taobao)
 根据[AutomationPlan]表的bannerImgex，bannerImgIndex和pageurl获取banner图片
 </summary>
 
 <param name="siteId"></param>
 <param name="Issueid"></param>
 <param name="categoryName">banner所属分类名</param>
 <param name="planType"></param>
 <param name="pageUrl">banner图所在链接</param>
 <param name="bannerImgRegex">匹配banner的正则表达式</param>
 <param name="bannerImgIndex">banner正则匹配结果的索引</param>
 <remarks>2016.2.25Hoyho注</remarks>
</member>
<member name="M:Analysis.EFHelper.ThumbnailCallback">
 <summary>
  callback of generate  banner thumbnail to scan every pixel of a picture
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.IsGoodBanner(System.Int32,System.Text.RegularExpressions.MatchCollection,System.Int32,System.String)">
 <summary>
 判断当前index是否匹配最佳尺寸banner，是则返回true，并更新数据库该BannerIndex，否则只返回false
 </summary>
 <param name="index">数据库bannerImgIndex</param>
 <param name="mCollection">当前正则匹配结果集</param>
 <param name="siteID">用于更新AutomationPlan</param>
 <param name="planType">用于更新AutomationPlan</param>
 <returns>匹配则返回则返回true</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetXinpinUrlandSubject(System.String)">
 <summary>
 获取X月X日类型的新品链接及文字(subject)
 </summary>
 <param name="shopUrl"></param>
 <returns>list.iten(0)是新品链接，list.item(1)是主题</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.FetchProduct(System.String,System.String,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)">
 <summary>
 获取指定链接(tmall/taobao)上的产品，并将对应数据插入到product及productsIssue表，无返回值
 </summary>
 <param name="url">产（新）品来源url</param>
 <param name="categoryName">产品类别名称</param>
 <param name="section">CA、NE、DA等</param>
 <param name="planType"></param>
 <param name="productCount">需要获取的产品个数</param>
 <param name="startTime">产品不重复的开始时间</param>
 <param name="endTime">产品不重复的结束时间</param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <returns>获取到的产品均插入到product及productsIssue表，无返回值</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetAsynProductList(System.String,System.Int32)">
 <summary>
 获取tmall、taobao产品页的产品,taobao和tmall店铺链接均适用
 </summary>
 <param name="url"></param>
 <param name="siteid"></param>
 <returns>装product类型的列表listProducts</returns>
 <remarks>指定URL上获得prodoct的Url和productName,SiteID，Discount等？hoyho2016.2.25</remarks>
</member>
<member name="M:Analysis.EFHelper.GetBanner(System.Int32,System.Int32,System.String,System.String,System.String)">
 <summary>
 读取本站点的本类型计划的BannerRegex表中的第一条规则，根据其中的数据获取本期邮件的banner，并填充至ads及ads_issue表
 </summary>
 <param name="siteid"></param>
 <param name="issueId"></param>
 <param name="cateName">banner所属分类名</param>
 <param name="planType"></param>
 <param name="domain">站点域名（当站点的src及url使用的是相对路径时，使用此参数补充成绝对路径）</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetProducts(System.Int32,System.String,System.String,System.Int32)">
 <summary>
 遍历本站点的本类型计划的productPaths表中的规则，根据其中的设定获取产品，并填充至products及products_issue表
 </summary>
 <param name="siteid"></param>
 <param name="planType"></param>
 <param name="domain"></param>
 <param name="issueId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.insertProducts(System.Collections.Generic.List{Analysis.Product},System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 将listproduct中前productCount个产品插入到产品表，并返回list of those productids
 </summary>
 <param name="listProducts"></param>
 <param name="categoryName"></param>
 <param name="section">CA，DA，NE等</param>
 <param name="planType"></param>
 <param name="productCount"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <returns>返回list of those productids</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.insertK11Products(System.Collections.Generic.List{Analysis.Product},System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 将listproduct中前productCount个产品插入到产品表，并返回list of those productids
 此方法针对K11的站点使用，因为product比较特殊
 </summary>
 <param name="listProducts"></param>
 <param name="categoryName"></param>
 <param name="section"></param>
 <param name="planType"></param>
 <param name="productCount"></param>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.GetListProducts(Analysis.Category,Analysis.ProductPath,System.String)">
 <summary>
 根据一条productpath记录获取产品
 </summary>
 <param name="cate"></param>
 <param name="item"></param>
 <param name="domain"></param>
 <returns>返回Product类型的list</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.FetchfbPosts(System.String,System.Int32,System.String,System.Int32)">
 <summary>
 获取fb的一个page上发布的post，并返回List(Of Product)
 </summary>
 <param name="fbPageName">fb的page名</param>
 <param name="limit">指定获取前几个post（按从新到旧）</param>
 <param name="accessToken"></param>
 <param name="siteID"></param>
 <param name="planType"></param>
 <param name="issueID"></param>
 <param name="categoryName">产品所属分类名</param>
 <param name="section">"CA","DA","NE"等</param>
 <returns>List(Of Product)</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetfbPosts(System.String,System.Int32,System.String)">
 <summary>
 获取一个fb页面的post的Json数据
 </summary>
 <param name="fbPageName">fb页面名字</param>
 <param name="limit">int，获取几个最新的post</param>
 <param name="accessToken">token</param>
 <returns>以Jarry返回post数据</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.AddfbPosttextHyperlink(System.String)">
 <summary>
 给post的文字描述中的http纯文本添加超链接
 </summary>
 <param name="postText"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.GetLongTimeToken(System.Int32)">
 <summary>
 获取指定id的long-time-token,tokenId=1-->facebook的token信息，tokenId=2-->新浪微博的token信息
 </summary>
 <param name="tokenId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.UpdateFbToken">
 <summary>
 到期时间在30天之内则自动更新facebook的token
 </summary>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.FilterKeyword(System.String)">
 <summary>
 匹配一串文本中的“#** ” 或“#***#”类型的文字，这些文字组提取出来作为k11Seo关键字用
 </summary>
 <param name="postText"></param>
 <returns>返回文字组list</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.HandleSubject(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
 <summary>
 根据preSubject标题字段替换标题标签，并保存至数据库
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="siteName"></param>
 <param name="planType"></param>
 <param name="preSubject"></param>
 <param name="cateName">替换成[CATE_NAME]</param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EFHelper.IsNtes(System.Int32,System.String)">
 <summary>
 判断用户是否需要通过网易邮件判断
 </summary>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.GetSubscriberCount(System.String,System.String)">
 <summary>
 获取名单里面的订阅人数
 </summary>
 <param name="account"></param>
 <param name="cate"></param>
 <returns></returns>
</member>
<member name="M:Analysis.EFHelper.GetFilterCategory(System.String,System.String[],System.Boolean)">
 <summary>
 获取发送名单
 </summary>
 <param name="cate"></param>
 <returns></returns>
</member>
<member name="M:Analysis.Everbuying.Start(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
 <summary>
 2014/02/10EverBuying改版，程序开始新入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="splitContactCount"></param>
 <param name="spreadLogin"></param>
 <param name="appId"></param>
 <param name="url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.Start1(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
 <summary>
 2014/02/10EverBuying改版不再使用，程序开始入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="Url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.GetOrUpdateCate(System.Int32,System.DateTime)">
 <summary>
 获取或者更新分类信息
 </summary>
 <param name="siteId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.CreateContacts(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 添加数据到SplitContactLists表和ContactLists_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="spreaLogin"></param>
 <param name="appId"></param>
 <param name="splitContactCount"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.InsertContactList(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.Int32)">
 <summary>
 将某一个联系人分组分割成多个联系人分组，并在ContactLists_Issue表中添加一条记录
 </summary>
 <param name="spreaLogin"></param>
 <param name="appId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="issueId"></param>
 <param name="listName"></param>
 <param name="splitContactCount"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.GetSubject(System.Int32)">
 <summary>
 从Promotion产品中获得Subject信息
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.GetLinkCategoryId(System.String,System.Int32,System.Int32)">
 <summary>
 当前Spread只支持最顶层的分类追踪,每期更新LastUpdate也会不相同，故加一个限制条件
 </summary>
 <param name="productUrl"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.InsertProductIssue(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
 <summary>
 添加数据到Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="section"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.JudgeCategory(System.String,System.Int32,System.String)">
 <summary>
 判断将要插入Categories表中URL是否重复，若数据重复，则返回false
 </summary>
 <param name="category"></param>
 <param name="siteId"></param>
 <param name="Url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.GetHtmlDocByUrl(System.String)">
 <summary>
 通过Url返回指定的HtmlDocument对象
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.InsertProduct(System.String,System.String,System.Decimal,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.Int32,System.Decimal,System.String,System.String)">
 <summary>
 更新或插入数据到Products表中,并返回添加产品的Id
 </summary>
 <param name="myProduct"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="lastUpdate"></param>
 <param name="description"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="pictureAlt"></param>
 <param name="sizeWidth"></param>
 <param name="sizeHeight"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns>产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.IsNewProduct(Analysis.Product,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的数据URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="product"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.GetProductList(System.Int32)">
 <summary>
 将Products表中需要匹配列的信息添加到list中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.GetRnd(System.Int64,System.Int64)">
 <summary>
 获取随机数
 </summary>
 <param name="min"></param>
 <param name="max"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.JudgeAds(System.String,System.String,System.String,System.Collections.Generic.List{Analysis.Ad})">
 <summary>
 判断将要插入Ads表中的数据URL是否重复，若数据重复，则返回false
 </summary>
 <param name="ad"></param>
 <param name="pictureUrl"></param>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Everbuying.Log(System.Exception)">
 <summary>
 写日志
 </summary>
 <param name="Ex"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.GetBanner(System.Int32,System.DateTime,System.Int32,HtmlAgilityPack.HtmlDocument)">
 <summary>
 获取Banner条信息，并更新Ads_Issue表的记录
 </summary>
 <param name="siteId"></param>
 <param name="updateTime"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.GetGreatDeal(System.Int32,System.Int32,System.DateTime,HtmlAgilityPack.HtmlDocument)">
 <summary>
 获取页面块“Great Deals”作为邮件模板的“Weekly Deals部分”，SectionID="WE"
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="updateTime"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.GetCatesProducts(System.Int32,System.Int32,System.DateTime,System.String)">
 <summary>
 获取主推分类的产品，产品页面按"hot"进行排序，如：http://www.everbuying.net/Wholesale-Cell-Phones-b-22.html?odr=hot
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="updateTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.GetProductList(System.Int32)">
 <summary>
 获取指定站点的products表中的所有产品，Dora，2014.02.11
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.InsertSubject(System.Int32,System.Int32,System.String,System.String)">
 <summary>
 获取邮件标题
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="periodicalType">期刊名，如：Deals，New Arrivals</param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.AddDomain(System.String,System.String)">
 <summary>
 把不完整的链接加上域名url
 </summary>
 <param name="domainUrl">域名url，最后一个字符不含"/"</param>
 <param name="orginalUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingDeals.getSKU(System.String)">
 <summary>
 把不完整的链接加上域名url
 </summary>
 <param name="domainUrl">域名url，最后一个字符不含"/"</param>
 <param name="orginalUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingNewArrival.GetCatesProducts(System.Int32,System.Int32,System.DateTime,System.String)">
 <summary>
 获取主推分类的产品，产品页面按"hot"进行排序，如：http://www.everbuying.com/Wholesale-Cell-Phones-b-22.html?odr=new
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="updateTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.Start(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
 <summary>
 程序开始入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="Url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.CreateContacts(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 添加数据到SplitContactLists表和ContactLists_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="spreaLogin"></param>
 <param name="appId"></param>
 <param name="splitContactCount"></param>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.InsertContactList(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.Int32)">
 <summary>
 将某一个联系人分组分割成多个联系人分组，并在ContactLists_Issue表中添加一条记录
 </summary>
 <param name="spreaLogin"></param>
 <param name="appId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="issueId"></param>
 <param name="listName"></param>
 <param name="splitContactCount"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.GetSubject(System.Int32)">
 <summary>
 从Promotion产品中获得Subject信息
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.GetLinkCategoryId(System.String,System.Int32,System.Int32)">
 <summary>
 当前Spread只支持最顶层的分类追踪,每期更新LastUpdate也会不相同，故加一个限制条件
 </summary>
 <param name="productUrl"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.InsertProductIssue(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
 <summary>
 添加数据到Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="section"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.JudgeCategory(System.String,System.Int32,System.String)">
 <summary>
 判断将要插入Categories表中URL是否重复，若数据重复，则返回false
 </summary>
 <param name="category"></param>
 <param name="siteId"></param>
 <param name="Url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.GetHtmlDocByUrl(System.String)">
 <summary>
 通过Url返回指定的HtmlDocument对象
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.InsertProduct(System.String,System.String,System.Decimal,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.Int32,System.Decimal,System.String,System.String)">
 <summary>
 更新或插入数据到Products表中,并返回添加产品的Id
 </summary>
 <param name="myProduct"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="lastUpdate"></param>
 <param name="description"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="pictureAlt"></param>
 <param name="sizeWidth"></param>
 <param name="sizeHeight"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns>产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.JudgeProduct(System.String,System.String,System.Decimal,System.String,System.Int32,System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的数据URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="product"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.GetProductList(System.Int32)">
 <summary>
 将Products表中需要匹配列的信息添加到list中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.GetRnd(System.Int64,System.Int64)">
 <summary>
 获取随机数
 </summary>
 <param name="min"></param>
 <param name="max"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.JudgeAds(System.String,System.String,System.String,System.Collections.Generic.List{Analysis.Ad})">
 <summary>
 判断将要插入Ads表中的数据URL是否重复，若数据重复，则返回false
 </summary>
 <param name="ad"></param>
 <param name="pictureUrl"></param>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverbuyingNews.Log(System.Exception)">
 <summary>
 写日志
 </summary>
 <param name="Ex"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingPersonalization.GetCatesProducts(System.Int32,System.Int32,System.DateTime,System.String,System.String[])">
 <summary>
 获取主推分类的产品，产品页面按"hot"进行排序，如：http://www.everbuying.com/Wholesale-Cell-Phones-b-22.html?odr=reviews
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="updateTime"></param>
 <param name="planType"></param>
 <param name="arrCategorys"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.EverBuyingPersonalization.CreateContactList(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.DateTime)">
 <summary>
 获取ContactList
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="categoryName"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetCategory(System.Int32,System.Int32,System.String,System.DateTime)">
 <summary>
 获取所有的大分类
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetAds(System.Int32,System.Int32,System.String,System.DateTime)">
 <summary>
 获取页面Banner条的信息，并填充到Ads和Ads_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetBestArrival(System.Int32,System.Int32,System.String,System.DateTime)">
 <summary>
 获取页面Best Arrival产品信息，并填充Products和Products_Issue表
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetNewArrival(System.Int32,System.Int32,System.String,System.DateTime)">
 <summary>
 获取页面New Arrival产品信息，并填充Products和Products_Issue表
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetCardProduct(System.Int32,System.Int32,System.String,System.DateTime)">
 <summary>
 获取页面"卡片模版"产品信息，并填充Products和Products_Issue表
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetHotArrival(System.Int32,System.Int32,System.String,System.DateTime)">
 <summary>
 获取页面Hot Arrival信息，并填充到Products和Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="planType"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetSubject(System.Int32,System.Int32,System.DateTime)">
 <summary>
 根据Ads和Ads_Issue表，Type="P"获取Ad并拼接写入到Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.ParseLink(System.String)">
 <summary>
 转换链接，使链接成为完整链接
 </summary>
 <param name="str"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.CheckCategory(System.String,System.String,System.Int32,System.DateTime)">
 <summary>
 判断该分类是否存在Categories表中，如果不存在，则添加一个分类
 </summary>
 <param name="strCategory"></param>
 <param name="strCategoryUrl"></param>
 <param name="siteId"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.FeverPrint.GetPromotionProduct(System.Int32,System.Int32,System.DateTime)">
 <summary>
 获取“促銷商品”信息，并添加到Products和Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="issueId"></param>
 <param name="nowTime"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.GetSpreadTemplate(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
 <summary>
 创建邮件模板
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
 Private Function GetSpreadTemplate(ByVal siteId As Integer, ByVal issueId As Integer) As String
</member>
<member name="M:Analysis.GenTemplate.InsertPromotionAndAd(System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 读取Ads表中Type="P"的一条记录，并填充相应的Promotion模板
 </summary>
 <param name="promotion"></param>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.FillRootCategory(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
 <summary>
 处理含有产品的大分类，返回填充好产品的模板
 </summary>
 <param name="beginStr">大分类的开始标签，[NEW_...]</param>
 <param name="endStr">大分类的结束标签，[END_...]</param>
 <param name="SpreadTemplate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.InsertProducts(System.String,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 在大分类中填充产品信息
 </summary>
 <param name="oldContent"></param>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.InsertProductOfCategory(System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 所有Section="Category"（Sections表）的产品填充
 </summary>
 <param name="oldContent"></param>
 <param name="searchString">大类的名称(Categories表)</param>
 <param name="lengthProduct">"[BEGIN_PRODUCT]"字符串的长度</param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.InsertProductOfOthers(System.String,System.Int32,System.String,System.Int32,System.Int32)">
 <summary>
 返回所有Section != "Category"（Sections表）的产品填充的模板
 </summary>
 <param name="oldContent"></param>
 <param name="issueId"></param>
 <param name="sectionId"></param>
 <param name="lengthProduct"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.HandleCategory(System.String,System.Int32)">
 <summary>
 用CategoryID(表：Categories)替换模板中的link_category的值标签
 （如,[CATEGORY_ID_BAGS]用553替换）
 </summary>
 <param name="SpreadTemplate"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.GenTemplate.InsertIssue(System.DateTime,System.Int32,System.String)">
 <summary>
 将数据写入到Issues表中
 </summary>
 <param name="nowTime"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <returns>返回插入单条数据的IssueId</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LifeInHK.GetPageInfo(System.String,System.Int32,System.DateTime)">
 <summary>
 get products and category from rss url
 </summary>
 <param name="rssURL"></param>
 <param name="siteId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.LifeInHK.InsertContactList(System.Int32)">
 <summary>
 插入联系人列表
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.LifeInHK.GetProductName">
 <summary>
 get the name of product order by pubDate,
 2013/06/14 added
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.InsertCategories(System.Int32)">
 <summary>
 往数据库中categories插入数据
 </summary>
 <param name="siteID">siteid </param>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.GetCategoryId(System.Int32,System.String)">
 <summary>
 获取指定站点的指定CategoryName的CategoryId
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.GetListAdids(System.String,System.Int32,System.Int32,System.DateTime,System.String)">
 <summary>
 获取指定URL页面的Banner条信息
 </summary>
 <param name="pageUrl"></param>
 <param name="siteid"></param>
 <param name="nowTime"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.InsertAd(Analysis.Ad,System.Collections.Generic.List{Analysis.Ad},System.Int32)">
 <summary>
 将获得的Ad信息保存至Ads表中。
 </summary>
 <param name="ad"></param>
 <param name="listAd"></param>
 <param name="categoryID"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.JudgeAd(System.String,System.Collections.Generic.List{Analysis.Ad})">
 <summary>
 判断即将插入的Ad的URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.GetProductList(System.Int32)">
 <summary>
 获取指定站点的products表中的所有产品
 </summary>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.JudgeProduct(System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.LighTake.AddIssueSubject(System.Int32,System.Int32,System.String,System.String)">
 <summary>
 获得邮件的subject
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.LiNing.InsertCategories(System.Int32)">
 <summary>
 往数据库中categories插入数据
 </summary>
 <param name="siteID">siteid </param>
 <remarks></remarks>
</member>
<member name="M:Analysis.LiNing.GetHotSellerProducts(System.Int32,System.Int64,System.String,System.String)">
 <summary>
 
 </summary>
 <param name="siteId"></param>
 <param name="IssueID"></param>
 <param name="CategoryName"></param>
 <param name="planType"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.LiNing.GetMiddleStr(System.String,System.String,System.String)">
 <summary>
 获取两字符串中间的字符串
 </summary>
 <param name="OriStr"></param>
 <param name="headStr"></param>
 <param name="endStr"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Analysis.MainStart">
 <summary>
 dll总入口，各个不同的自动化在此开始分流
 author：DoraAO
 create time;20140628
 自动化站点逐渐增多，如果全部在emailAlerter中分流有诸多弊端：1每新增一个站点都需同步更新emailAlerter ;2站点增多emailAlerter中的分流琐碎代码会逐渐庞大而影响简洁性可读性
 为dll提供一个总入口，可以解决上述弊端
 </summary>
 <remarks></remarks>
</member>
<member name="M:Analysis.NotificationEmail.SentErrorEmail(System.String)">
 <summary>
 当自动化出现错误时，发送电子邮件到组别邮箱emailalerter@reasonables.com中
 </summary>
 <param name="errorMsg"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.NotificationEmail.SentNotificationEmail(System.String,System.String,System.String)">
 <summary>
 当自动化出现错误时，发送电子邮件到组别邮箱emailalerter@reasonables.com中
 </summary>
 <param name="errorMsg"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.NotificationEmail.SentStartEmail(System.String,System.String,System.String)">
 <summary>
 当自动化邮件开始发送，或者创建草稿状态时，发送电子邮件到指定邮箱中
 </summary>
 <param name="subject"></param>
 <param name="content"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.NotificationEmail.SentStartEmail(System.String,System.String,System.String[],System.String,System.String,System.String,System.String,System.String)">
 <summary>
 当自动化邮件开始发送，或者创建草稿状态时，发送电子邮件到指定邮箱中
 </summary>
 <param name="subject"></param>
 <param name="content"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.NotificationEmail.SentStartEmail(System.String,System.String)">
 <summary>
 当自动化邮件开始发送，或者创建草稿状态时，发送电子邮件到组别邮箱emailalerter@reasonables.com中
 </summary>
 <param name="subject"></param>
 <param name="content"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.NotificationEmail.SentStartEmail(System.String,System.String,System.String[],System.String,System.String,System.String,System.String)">
 <summary>
 当自动化邮件开始发送，或者创建草稿状态时，发送电子邮件到组别邮箱emailalerter@reasonables.com中
 </summary>
 <param name="subject"></param>
 <param name="content"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.PublicMethod.Array2string(System.String[]@,System.Char)">
 <summary>
 
 </summary>
 <param name="arr"></param>
 <param name="splitChar"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.PublicMethod.AutoPlanInterval(System.Int32@)">
 <summary>
 规范化自动化计划发送间隔的天数
 </summary>
 <param name="intervalDay"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.PublicMethod.DeserializeTimeLimit(System.String)">
 <summary>
 
 </summary>
 <param name="timeLimit"></param>
 <returns></returns>
 <remarks>
 TimeSpan: Send time limit of campaign. format like: [ { '1': ['01:00-02:00','01:00-02:00'] }, { '2': ['01:00-02:00','01:00-02:00'] } ]
 '0' means every day, '1': Monday, '2': Tuesday,'3': Wednesday, '4': Thursday,'5': Friday, '6': Saturday, '7': Sunday
 
 </remarks>
</member>
<member name="M:Analysis.PublicMethod.GetCateListFromPage(System.String,System.Boolean@,System.String@,System.String@,System.String,System.Int32,Analysis.EBusinessSite)">
 <summary>
 从页面的tbContentItems的内容整合成list cate
 </summary>
 <param name="tbContentItems"></param>
 <param name="hasBanner"></param>
 <param name="categories"></param>
 <param name="shopUrl"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.PublicMethod.GetMultiTemplataIdFromListBox(System.String)">
 <summary>
 返回所有副模板组成的tid字符串，如115,25
 </summary>
 <param name="tbSubTemplate"></param>
 <returns></returns>
</member>
<member name="F:Analysis.QuerySubscriber._countrylist">
 <summary>
 查询指定国家或地区的收件人
 </summary>
 <remarks></remarks>
</member>
<member name="F:Analysis.QuerySubscriber._gender">
 <summary>
 查询指定性别的收件人
 </summary>
 <remarks></remarks>
</member>
<member name="F:Analysis.QuerySubscriber._agerange">
 <summary>
 查询指定年龄范围的收件人
 </summary>
 <remarks></remarks>
</member>
<member name="F:Analysis.QuerySubscriber._strategy">
 <summary>
 选择收件人的策略,如收件人之前是否打开过类似邮件
 </summary>
 <remarks></remarks>
</member>
<member name="M:Analysis.QuerySubscriber.ToJsonString">
 <summary>
 [序列化]将查询对象转换为json字符串，作为SpreadAPI的参数传递
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.QuerySubscriber.FromJsonString(System.String)">
 <summary>
 [反序列化]将传递过来的json字符串反序列化为查询对象
 </summary>
 <param name="JsonString"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Resolver.ResolveHtmlProduct(Analysis.Category,Analysis.ProductPath,System.String)">
 <summary>
 根据productPath和category规则解析出产品
 </summary>
 <param name="category"></param>
 <param name="path"></param>
 <param name="domain"></param>
 <returns></returns>
</member>
<member name="M:Analysis.Resolver.ResolveHtmlProduct(Analysis.Category,Analysis.ProductPath,System.String,System.Func{Analysis.Product,System.String})">
 <summary>
 根据productPath和category规则解析出产品
 </summary>
 <param name="category"></param>
 <param name="path"></param>
 <param name="domain"></param>
 <returns></returns>
</member>
<member name="M:Analysis.Resolver.isProductDuplicate(System.Collections.Generic.List{Analysis.Product},Analysis.Product)">
 <summary>
 judge if this product duplicate (in the given list )
 </summary>
 <param name="productList"></param>
 <param name="prodcut"></param>
 <returns></returns>
</member>
<member name="M:Analysis.Rjfashion.Start(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)">
 <summary>
 程序开始入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="Url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.GetSubject(System.Int32)">
 <summary>
 从Promotion产品中获得Subject信息
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.InsertProductByUrl(System.Int32,System.Int32,System.Int32,System.String,System.String,HtmlAgilityPack.HtmlDocument)">
 <summary>
 插入N件产品到指定的类别下
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="count"></param>
 <param name="category"></param>
 <param name="cateType"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.InsertPromotionItem(System.Int32,System.Int32,System.Int32,System.String,System.String,HtmlAgilityPack.HtmlDocument)">
 <summary>
 随机获取促销产品
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="count"></param>
 <param name="category"></param>
 <param name="cateType"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.InsertProductData(System.Int32,System.Int32,System.String)">
 <summary>
 插入所有产品
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.InsertProductIssue(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
 <summary>
 添加数据到Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="section"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.JudgeCategory(System.String,System.Int32,System.String)">
 <summary>
 判断将要插入Categories表中URL是否重复，若数据重复，则返回false
 </summary>
 <param name="category"></param>
 <param name="siteId"></param>
 <param name="Url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.GetHtmlDocByUrl(System.String)">
 <summary>
 通过Url返回指定的HtmlDocument对象
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.InsertCategory(System.Int32,System.Int32,System.String)">
 <summary>
 插入所有分类信息
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.InsertProduct(System.String,System.String,System.Decimal,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32)">
 <summary>
 更新或插入数据到Products表中,并返回添加产品的Id
 </summary>
 <param name="myProduct"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="lastUpdate"></param>
 <param name="description"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="pictureAlt"></param>
 <param name="sizeWidth"></param>
 <param name="sizeHeight"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns>产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.JudgeProduct(System.String,System.String,System.Decimal,System.String,System.Int32,System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的数据URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="product"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.GetProductList(System.Int32)">
 <summary>
 将Products表中需要匹配列的信息添加到list中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.AddTempalte(Analysis.Template)">
 <summary>
 添加模板
 </summary>
 <param name="t"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.GetRnd(System.Int64,System.Int64)">
 <summary>
 获取随机数
 </summary>
 <param name="min"></param>
 <param name="max"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.RemoveStringCode(System.String)">
 <summary>
 从字符串中提取浮点数
 </summary>
 <param name="str"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Rjfashion.GetJsonDataByParameter(System.String,System.String,System.String)">
 <summary>
 Read rateCounter Json
 </summary>
 <param name="jText"></param>
 <param name="name"></param>
 <param name="param"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.Start(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String)">
 <summary>
 程序开始入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="Url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.GetSubject(System.Int32,System.String)">
 <summary>
 从Promotion产品中获得Subject信息
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.InsertPromotionItem(System.Int32,System.Int32,System.Int32,System.String,System.String,HtmlAgilityPack.HtmlDocument)">
 <summary>
 随机获取促销产品
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="count"></param>
 <param name="category"></param>
 <param name="cateType"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.InsertProductIssue(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
 <summary>
 添加数据到Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="section"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.JudgeCategory(System.String,System.Int32,System.String)">
 <summary>
 判断将要插入Categories表中URL是否重复，若数据重复，则返回false
 </summary>
 <param name="category"></param>
 <param name="siteId"></param>
 <param name="Url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.GetHtmlDocByUrl(System.String)">
 <summary>
 通过Url返回指定的HtmlDocument对象
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.InsertCategory(System.Int32,System.Int32,System.String)">
 <summary>
 插入所有分类信息
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.InsertProduct(System.String,System.String,System.Decimal,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32)">
 <summary>
 更新或插入数据到Products表中,并返回添加产品的Id
 </summary>
 <param name="myProduct"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="lastUpdate"></param>
 <param name="description"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="pictureAlt"></param>
 <param name="sizeWidth"></param>
 <param name="sizeHeight"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns>产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.JudgeProduct(System.String,System.String,System.Decimal,System.String,System.Int32,System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的数据URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="product"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.GetProductList(System.Int32)">
 <summary>
 将Products表中需要匹配列的信息添加到list中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.InsertProduct(Analysis.Product,System.DateTime,System.Int32,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 将一个product数据插入到Product表中，如果Product表中已存在此条记录，则update，同时不修改此product的CategoryID  Dora 2014-02-11
 </summary>
 <param name="aProductInList"></param>
 <param name="now"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.JudgeProduct(System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的Productd的URL是否在数据库中已经存在，如果存在，返回false Dora 2014-02-11
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.AddTempalte(Analysis.Template)">
 <summary>
 添加模板
 </summary>
 <param name="t"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.GetRnd(System.Int64,System.Int64)">
 <summary>
 获取随机数
 </summary>
 <param name="min"></param>
 <param name="max"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.RemoveStringCode(System.String)">
 <summary>
 从字符串中提取浮点数
 </summary>
 <param name="str"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.RjNews.GetJsonDataByParameter(System.String,System.String,System.String)">
 <summary>
 Read rateCounter Json
 </summary>
 <param name="jText"></param>
 <param name="name"></param>
 <param name="param"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.SpreadAccountExist(System.String)">
 <summary>
 判断指定spreadAccount是否存在于autosites表中，如存在返回默认siteid，否则返回-1
 </summary>
 <param name="spreadAccount"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.shopNameExist(System.String,System.String)">
 <summary>
 判断指定shopName-spreadAccount 键值对 是否存在于autosites表中，如存在返回siteid（同一个shopName只有一条），否则返回-1
 </summary>
 <param name="shopName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.AddNewSpreadAccount(System.String,System.String)">
 <summary>
 使用传入的参数spread account 及apikey不做任何判断创建一条autosites记录，返回siteID
 </summary>
 <param name="spreadAccount"></param>
 <param name="spreadApiKey"></param>
 <returns>siteID</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.addNewSite(System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 添加一条新的autosites记录，其中appid根据spreadAccount获取，dlltype根据siteURL确定；返回值：siteid
 </summary>
 <param name="spreadAccount"></param>
 <param name="siteName"></param>
 <param name="siteUrl"></param>
 <param name="logoImgUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.updateAutoSite(System.String,System.String,System.String)">
 <summary>
 更新一条autosite记录，目前仅支持更新logoImgUrl字段
 </summary>
 <param name="spreadaccount"></param>
 <param name="sitename"></param>
 <param name="logoImgUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.getApiKey(System.String)">
 <summary>
 通过spreadAccount从autosite表中获取apikey
 </summary>
 <param name="spreadAccount"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.defineDlltype(System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="siteUrl"></param>
 <param name="dlltypeflag">true:根据店铺shopurl确定类型，false：全部判断为indepwebsite</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.GetDomain(System.String,System.String)">
 <summary>
 indepwebsite独立站流程且是淘宝天猫店铺的域名为https://,添加在url及图片src前面
 </summary>
 <param name="siteUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.addNewAutoPlan(System.String,System.String,Analysis.AutomationPlan)">
 <summary>
 添加一条autoPlan记录,创建成功返回1，出现异常返回-1，记录已存在返回-2。如果此记录对应的senderEmail不存在则会直接创建
 </summary>
 <param name="spreadAccount"></param>
 <param name="apiKey"></param>
 <param name="newAtuoplanItem"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.AutoPlanExist(System.Int32,System.String)">
 <summary>
 siteid 及plantype的autoplan记录是否已存在，存在返回TRUE，不存在false
 </summary>
 <param name="siteId"></param>
 <param name="planType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.TriggerPlanExit(System.Int32,System.String)">
 <summary>
 根据siteid和categories 字符串查询是否已存在HP类型的点击计划，如有返回HP*（*代表数字）,否则返回空字符""
 </summary>
 <param name="siteid"></param>
 <param name="categories"></param>
 <returns></returns>
</member>
<member name="M:Analysis.SEmailEfHelper.AutoPlanCategoriesExist(System.Int32,System.String)">
 <summary>
 siteid 及categories的autoplan记录是否已存在，存在返回其true，不存在false
 </summary>
 <param name="siteId"></param>
 <param name="categories"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.GetPlantype(System.Int32)">
 <summary>
 获取到一个目前没有使用的plantype，仅供HO,HA类型
 </summary>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.GetPlantype(System.Int32,System.Boolean)">
 <summary>
 获取到一个目前没有使用的plantype,根据是否是触发返回HP组别还是{"HO","HA"}组别
 </summary>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.InsertOrUpdateCategory(System.Collections.Generic.List{Analysis.Category})">
 <summary>
 将category数据整理进数据库。如果cateName存在，则更新此category。如果cateName不存在则添加至数据库
 </summary>
 <param name="listCategory"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.GetCategories(System.String,System.Int32)">
 <summary>
 cates的参数规范cate1^cate2...
 </summary>
 <param name="cates"></param>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailEfHelper.GetCategoryItems(System.String,System.Int32)">
 <summary>
 cates的参数规范cate1^cate2...返回新品，新品；焦点图，banner；格式的string
 </summary>
 <param name="cates"></param>
 <param name="siteid"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailTmall.GetProductsByUrl(System.String,System.Int32)">
 <summary>
 通过Url插入产品列表
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="count"></param>
 <param name="category"></param>
 <param name="cateType"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.SEmailTmall.InsertProductOfOthers(System.String,System.Int32,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 返回所有Section != "Category"（Sections表）的产品填充的模板
 </summary>
 <param name="oldContent"></param>
 <param name="issueId"></param>
 <param name="sectionId"></param>
 <param name="lengthProduct"></param>
 <param name="siteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SozMall.SetSubject(System.Int32,System.Int32,System.String,System.String,System.String)">
 <summary>
 从数据库Promotion产品中获得并设置Subject信息如个性化，刊号，日期等
 </summary>
 <param name="issueId"></param>
 <remarks>可以新增自定义标签，并在此处实现</remarks>
</member>
<member name="M:Analysis.SpreadHelper.AddSenderEmail(System.String,System.String,System.String)">
 <summary>
 添加发件人地址，创建成功返回TRUE。如果senderemail已存在或不合法，则会返回false
 </summary>
 <param name="spreadAccount"></param>
 <param name="apiKey"></param>
 <param name="senderEmail"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SpreadHelper.getSpreadApiKey(System.String,System.String)">
 <summary>
 获取spread账号的ApiKey
 </summary>
 <param name="spreadAccount"></param>
 <param name="password"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SpreadHelper.UpdateCampaignContentWithZipFile(System.String,System.String,System.Byte[],System.Int32)">
 <summary>
 调用spreadAPI uplodeZipFile（）方法上传一个campaign的内容
 </summary>
 <param name="spreadAccount"></param>
 <param name="apiKey"></param>
 <param name="contentsByte"></param>
 <param name="camId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SpreadHelper.AddFileToZip(System.String,System.String)">
 <summary>
 将一个文件压缩成".zip"格式压缩包
 </summary>
 <param name="zipFileName"></param>
 <param name="fileToAdd"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SpreadHelper.CreateFile(System.String,System.String,System.String,System.Int32)">
 <summary>
 创建一个草稿内容的.htm文件，文件命名规则为siteid + ampaignID ＋ yyyyMMddHHmm.htm，创建成功返回文件名，否则返回空
 </summary>
 <param name="contents">文件内容</param>
 <param name="siteName"></param>
 <param name="campaignId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SpreadHelper.GetSubscription2String(System.String)">
 <summary>
 返回账号下状态不是删除的所有名单，返回结果各名单以逗号分隔串联组成一个string
 </summary>
 <param name="spreadAccount"></param>
 <returns>String:"contact list 20120203,contact list 20120204,contact list 20120205"</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.SpreadHelper.GetSubscriptionCount(System.String,System.String,System.String)">
 <summary>
 获取名单下有效的Subscription数量
 </summary>
 <param name="spreadAccount"></param>
 <param name="password"></param>
 <param name="cate"></param>
 <returns></returns>
</member>
<member name="M:Analysis.SpreadHelper.GetFilterCategory(System.String,System.String,System.String[],System.Boolean)">
 <summary>
 获取发送名单
 </summary>
 <param name="cate"></param>
 <returns></returns>
</member>
<member name="M:Analysis.Taobao.Start(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
 <summary>
 程序开始入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="Url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.GetSubject(System.Int32)">
 <summary>
 从Promotion产品中获得Subject信息
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.TestProductData(System.String)">
 <summary>
 For Test only
 </summary>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.InsertProductByUrl(System.Int32,System.Int32,System.Int32,System.String,System.String,HtmlAgilityPack.HtmlDocument)">
 <summary>
 插入N件产品到指定的类别下
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="count"></param>
 <param name="category"></param>
 <param name="cateType"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.InsertPromotionItem(System.Int32,System.Int32,System.Int32,System.String,System.String,HtmlAgilityPack.HtmlDocument)">
 <summary>
 随机获取促销产品
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="count"></param>
 <param name="category"></param>
 <param name="cateType"></param>
 <param name="doc"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.InsertProductData(System.Int32,System.Int32,System.String)">
 <summary>
 插入所有产品
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.InsertProductIssue(System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.Int32})">
 <summary>
 添加数据到Products_Issue表中
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="section"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.JudgeCategory(System.String,System.Int32,System.String)">
 <summary>
 判断将要插入Categories表中URL是否重复，若数据重复，则返回false
 </summary>
 <param name="category"></param>
 <param name="siteId"></param>
 <param name="Url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.GetHtmlDocByUrl(System.String)">
 <summary>
 通过Url返回指定的HtmlDocument对象
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.InsertCategory(System.Int32,System.Int32,System.String)">
 <summary>
 插入所有分类信息
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.InsertProduct(System.String,System.String,System.Decimal,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32)">
 <summary>
 更新或插入数据到Products表中,并返回添加产品的Id
 </summary>
 <param name="myProduct"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="lastUpdate"></param>
 <param name="description"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="pictureAlt"></param>
 <param name="sizeWidth"></param>
 <param name="sizeHeight"></param>
 <param name="categoryId"></param>
 <param name="list"></param>
 <returns>产品的Id</returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.JudgeProduct(System.String,System.String,System.Decimal,System.String,System.Int32,System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的数据URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="product"></param>
 <param name="url"></param>
 <param name="price"></param>
 <param name="pictureUrl"></param>
 <param name="siteId"></param>
 <param name="currency"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.GetProductList(System.Int32)">
 <summary>
 将Products表中需要匹配列的信息添加到list中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.AddTempalte(Analysis.Template)">
 <summary>
 添加模板
 </summary>
 <param name="t"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.GetRnd(System.Int64,System.Int64)">
 <summary>
 获取随机数
 </summary>
 <param name="min"></param>
 <param name="max"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.RemoveStringCode(System.String)">
 <summary>
 从字符串中提取浮点数
 </summary>
 <param name="str"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Taobao.GetJsonDataByParameter(System.String,System.String,System.String)">
 <summary>
 Read rateCounter Json
 </summary>
 <param name="jText"></param>
 <param name="name"></param>
 <param name="param"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tbdress.InsertCategories(System.Int32)">
 <summary>
 往数据库中categories插入数据
 </summary>
 <param name="siteID">siteid </param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tbdress.GetListProducts(System.String,System.Int32,System.Int32,System.DateTime,System.String)">
 <summary>
 获取某个分类URL的产品信息，
 </summary>
 <param name="pageUrl">特定分类的URL</param>
 <param name="productCount"></param>
 <param name="siteId"></param>
 <param name="nowTime"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tbdress.GetCategoryId(System.Int32,System.String)">
 <summary>
 获取某个店铺的一个CategoryId
 </summary>
 <param name="siteId"></param>
 <param name="categoryName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tbdress.JudgeProduct(System.String,System.Collections.Generic.List{Analysis.Product})">
 <summary>
 判断即将插入的数据URL是否在数据库中已经存在，如果存在，返回false
 </summary>
 <param name="url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tbdress.GetProductList(System.Int32)">
 <summary>
 将Products表中需要匹配列的信息添加到list中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tbdress.AddIssueSubject(System.Int32,System.Int32,System.String)">
 <summary>
 获得邮件的subject
 </summary>
 <param name="issueId"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.Start(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String)">
 <summary>
 程序入口
 </summary>
 <param name="IssueID"></param>
 <param name="siteId"></param>
 <param name="planType"></param>
 <param name="Url"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.GetSubject(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
 <summary>
 从Promotion产品中获得Subject信息
 </summary>
 <param name="issueId"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.InsertProductData(System.String[]@,System.Int32,System.Int32,System.String,System.String,System.String,System.Int32)">
 <summary>
 插入所有产品信息
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.InsertCategory(System.Int32,System.String,System.String)">
 <summary>
 插入所有分类
 </summary>
 <param name="siteId"></param>
 <param name="IssueId"></param>
 <param name="ShopUrl"></param>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.JudgeCategory(System.String,System.Int32,System.String,System.Collections.Generic.List{Analysis.Category})">
 <summary>
 判断将要插入Categories表中URL是否重复，若数据重复，则返回false
 </summary>
 <param name="category"></param>
 <param name="siteId"></param>
 <param name="Url"></param>
 <param name="list"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.AddTempalte(Analysis.Template)">
 <summary>
 添加模板
 </summary>
 <param name="t"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.GetJsonDataByParameter(System.String,System.String,System.String)">
 <summary>
 Read rateCounter Json
 </summary>
 <param name="jText"></param>
 <param name="name"></param>
 <param name="param"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.GetItemInfoJsonFromTmall(System.String,System.String)">
 <summary>
 Return Iteminof(Json Format) by Url
 </summary>
 <param name="pageUrl"></param>
 <param name="apiUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.GetRateJsonFromTmall(System.Object)">
 <summary>
 Return RateInfo(Json Format) By Url
 </summary>
 <param name="pageUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.GetValue(System.String,System.String,System.String)">
 <summary>
 find specific string by Regex
 </summary>
 <param name="str"></param>
 <param name="s"></param>
 <param name="e"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.Tmall.GetRnd(System.Int64,System.Int64)">
 <summary>
 获取随机数
 </summary>
 <param name="min"></param>
 <param name="max"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Analysis.TmallTaobaoSite.StandardlizeShopURl(System.String)">
 <summary>
 将店铺（目前淘宝/天猫）链接规范化
 </summary>
 <param name="shopUrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Analysis.SpreadWebReference.Service">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.#ctor">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getUserSentReportCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetUserCreditCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetSubscriberDetailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignSubscriberDetailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetUploadRequestStatusCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.UnsubscribeEmailInAccountCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.UnsubscribeEmailInContactListCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaignDraftCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaignDraft2Completed">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaignCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.CreateCampaignBySimpleTypeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaign2Completed">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.UpdateCampaignStatusCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendSMSCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetSmsRepliesCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getCampaignStatusCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getCampaignReportCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getCampaignReport2Completed">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.ChangePublishStatusCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getAllSubscriptionCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getSubscriptionCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getSubscriptions2StringCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetSubscribersCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createSubscriptionCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createContactListCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.addSubscriberByEmailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.DeleteSubscribersFromListCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.DeleteSubscribersFromAccountCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.addSubscriberByInfoCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.addSubscribersByInfoCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.addSubscribersByInfo2Completed">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.Send2Completed">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.Send3Completed">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendmultipleAttachmentCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendMTREmailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendWithAttachmentCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendSimpleAttachmentCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.EmailSendCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.UpdateMemberEmailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendTemplateEmailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendAndCcCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetEmailStatusCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetSMSStatusCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.HelloWorldCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignsSend2TalkkingUserCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SendBatchCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SearchContactsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SplitContactsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.ExcludeContactListCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignDetailReportCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignSentsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignOpensCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignOpensJsonCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignOpensWithNameCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignClicksCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignClicksWithNameCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignUnsubscribesCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesToFtpCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignAbusesCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignConversionsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignConvertionsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetCampaignBouncesCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.AddSenderEmailCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.AddOrUpdateWebhookCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.CreateNewAccountCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.TransferCreditCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.UplodeZipFileCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.UploadContactListFileCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.ActivationCampaignByFtpFileCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.NameExistsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.EmailExistsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getCampaignIDCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetAccessTokenCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.VerifyAccessTokenCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetAPIKeyCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetAccountInfoCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SetCampaignDailyLimitCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SetCampaignTimeLimitCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.SplitContactListByRangeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getActiveSubscribersByContactListCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaignDraftSerializeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaignSerializeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.createCampaign2SerializeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.getCampaignReportSerializeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.addSubscriberByInfoSerializeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.addSubscribersByInfoSerializeCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.ExcludeContactsCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.ExcludeContactsByDomainCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.ExcludeContactsByNetEaseCompleted">
<remarks/>
</member>
<member name="E:Analysis.SpreadWebReference.Service.GetNetEaseRankCompleted">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getUserSentReport(System.String,System.String,Analysis.SpreadWebReference.AccountType,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getUserSentReportAsync(System.String,System.String,Analysis.SpreadWebReference.AccountType,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getUserSentReportAsync(System.String,System.String,Analysis.SpreadWebReference.AccountType,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetUserCredit(System.String,System.String,Analysis.SpreadWebReference.AccountType)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetUserCreditAsync(System.String,System.String,Analysis.SpreadWebReference.AccountType)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetUserCreditAsync(System.String,System.String,Analysis.SpreadWebReference.AccountType,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSubscriberDetail(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSubscriberDetailAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSubscriberDetailAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignSubscriberDetail(System.String,System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignSubscriberDetailAsync(System.String,System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignSubscriberDetailAsync(System.String,System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetUploadRequestStatus(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetUploadRequestStatusAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetUploadRequestStatusAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UnsubscribeEmailInAccount(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UnsubscribeEmailInAccountAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UnsubscribeEmailInAccountAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UnsubscribeEmailInContactList(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UnsubscribeEmailInContactListAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UnsubscribeEmailInContactListAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraft(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraftAsync(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraftAsync(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraft2(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraft2Async(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraft2Async(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignAsync(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignAsync(System.String,System.String,Analysis.SpreadWebReference.Campaign,System.String[],System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CreateCampaignBySimpleType(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CreateCampaignBySimpleTypeAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CreateCampaignBySimpleTypeAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign2(System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignCreatives[],System.String[],System.Int32,System.DateTime,System.String,Analysis.SpreadWebReference.CampaignStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign2Async(System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignCreatives[],System.String[],System.Int32,System.DateTime,System.String,Analysis.SpreadWebReference.CampaignStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign2Async(System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignCreatives[],System.String[],System.Int32,System.DateTime,System.String,Analysis.SpreadWebReference.CampaignStatus,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UpdateCampaignStatus(System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UpdateCampaignStatusAsync(System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UpdateCampaignStatusAsync(System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignStatus,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendSMS(System.String,System.String,System.String,System.String,System.DateTime,Analysis.SpreadWebReference.CampaignStatus,System.String[],System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendSMSAsync(System.String,System.String,System.String,System.String,System.DateTime,Analysis.SpreadWebReference.CampaignStatus,System.String[],System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendSMSAsync(System.String,System.String,System.String,System.String,System.DateTime,Analysis.SpreadWebReference.CampaignStatus,System.String[],System.String[],System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSmsReplies(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSmsRepliesAsync(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSmsRepliesAsync(System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignStatus(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignStatusAsync(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignStatusAsync(System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReport(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReportAsync(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReportAsync(System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReport2(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReport2Async(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReport2Async(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ChangePublishStatus(System.String,System.String,System.String,System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ChangePublishStatusAsync(System.String,System.String,System.String,System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ChangePublishStatusAsync(System.String,System.String,System.String,System.Boolean,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getAllSubscription(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getAllSubscriptionAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getAllSubscriptionAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getSubscription(System.String,System.String,Analysis.SpreadWebReference.SubscriptionStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getSubscriptionAsync(System.String,System.String,Analysis.SpreadWebReference.SubscriptionStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getSubscriptionAsync(System.String,System.String,Analysis.SpreadWebReference.SubscriptionStatus,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getSubscriptions2String(System.String,System.String,Analysis.SpreadWebReference.SubscriptionStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getSubscriptions2StringAsync(System.String,System.String,Analysis.SpreadWebReference.SubscriptionStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getSubscriptions2StringAsync(System.String,System.String,Analysis.SpreadWebReference.SubscriptionStatus,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSubscribers(System.String,System.String,System.String,Analysis.SpreadWebReference.SubscriberStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSubscribersAsync(System.String,System.String,System.String,Analysis.SpreadWebReference.SubscriberStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSubscribersAsync(System.String,System.String,System.String,Analysis.SpreadWebReference.SubscriberStatus,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createSubscription(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createSubscriptionAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createSubscriptionAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createContactList(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createContactListAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createContactListAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByEmail(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByEmailAsync(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByEmailAsync(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.DeleteSubscribersFromList(System.String,System.String,System.String[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.DeleteSubscribersFromListAsync(System.String,System.String,System.String[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.DeleteSubscribersFromListAsync(System.String,System.String,System.String[],System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.DeleteSubscribersFromAccount(System.String,System.String,System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.DeleteSubscribersFromAccountAsync(System.String,System.String,System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.DeleteSubscribersFromAccountAsync(System.String,System.String,System.String[],System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByInfo(System.String,System.String,Analysis.SpreadWebReference.Subscriber,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByInfoAsync(System.String,System.String,Analysis.SpreadWebReference.Subscriber,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByInfoAsync(System.String,System.String,Analysis.SpreadWebReference.Subscriber,System.String,Analysis.SpreadWebReference.DoubleOptIn,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfo(System.String,System.String,Analysis.SpreadWebReference.Subscriber[],System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfoAsync(System.String,System.String,Analysis.SpreadWebReference.Subscriber[],System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfoAsync(System.String,System.String,Analysis.SpreadWebReference.Subscriber[],System.String,Analysis.SpreadWebReference.DoubleOptIn,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfo2(System.String,System.String,Analysis.SpreadWebReference.Subscriber[],System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfo2Async(System.String,System.String,Analysis.SpreadWebReference.Subscriber[],System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfo2Async(System.String,System.String,Analysis.SpreadWebReference.Subscriber[],System.String,Analysis.SpreadWebReference.DoubleOptIn,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send2Async(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send2Async(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send3(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send3Async(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send3Async(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendmultipleAttachment">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendmultipleAttachmentAsync">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendmultipleAttachmentAsync(System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendMTREmail">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendMTREmailAsync">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendMTREmailAsync(System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendWithAttachment(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignAttachment[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendWithAttachmentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignAttachment[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendWithAttachmentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.CampaignAttachment[],System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendSimpleAttachment(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendSimpleAttachmentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendSimpleAttachmentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.EmailSend(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.EmailSendAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.EmailSendAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UpdateMemberEmail(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UpdateMemberEmailAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UpdateMemberEmailAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendTemplateEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendTemplateEmailAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendTemplateEmailAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.Send(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendAndCc(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendAndCcAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendAndCcAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetEmailStatus(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetEmailStatusAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetEmailStatusAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSMSStatus(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSMSStatusAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetSMSStatusAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.HelloWorld">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.HelloWorldAsync">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.HelloWorldAsync(System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignsSend2TalkkingUser(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignsSend2TalkkingUserAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignsSend2TalkkingUserAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendBatch(System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendBatchAsync(System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SendBatchAsync(System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SearchContacts(System.String,System.String,System.String,System.Int32,System.String,System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SearchContactsAsync(System.String,System.String,System.String,System.Int32,System.String,System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SearchContactsAsync(System.String,System.String,System.String,System.Int32,System.String,System.Boolean,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SplitContacts(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SplitContactsAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SplitContactsAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactList(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactListAsync(System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactListAsync(System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignDetailReport(System.String,System.String,System.Int32,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignDetailReportAsync(System.String,System.String,System.Int32,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignDetailReportAsync(System.String,System.String,System.Int32,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignSents(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignSentsAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignSentsAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpens(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensJson(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensJsonAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensJsonAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensWithName(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensWithNameAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignOpensWithNameAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignClicks(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignClicksAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignClicksAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignClicksWithName(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignClicksWithNameAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignClicksWithNameAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignUnsubscribes(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignUnsubscribesAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignUnsubscribesAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountUnsubscribes(System.String,System.String,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesAsync(System.String,System.String,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesAsync(System.String,System.String,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesToFtp(System.String,System.String,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesToFtpAsync(System.String,System.String,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountUnsubscribesToFtpAsync(System.String,System.String,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignAbuses(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignAbusesAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignAbusesAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignConversions(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignConversionsAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignConversionsAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignConvertions(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignConvertionsAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignConvertionsAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignBounces(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignBouncesAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetCampaignBouncesAsync(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.AddSenderEmail(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.AddSenderEmailAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.AddSenderEmailAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.AddOrUpdateWebhook(System.String,System.String,System.String,Analysis.SpreadWebReference.EventType,System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.AddOrUpdateWebhookAsync(System.String,System.String,System.String,Analysis.SpreadWebReference.EventType,System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.AddOrUpdateWebhookAsync(System.String,System.String,System.String,Analysis.SpreadWebReference.EventType,System.Boolean,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CreateNewAccount(System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CreateNewAccountAsync(System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CreateNewAccountAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.TransferCredit(System.String,System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.TransferCreditAsync(System.String,System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.TransferCreditAsync(System.String,System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UplodeZipFile(System.String,System.String,System.Byte[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UplodeZipFileAsync(System.String,System.String,System.Byte[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UplodeZipFileAsync(System.String,System.String,System.Byte[],System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UploadContactListFile(System.String,System.String,System.String,System.Byte[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UploadContactListFileAsync(System.String,System.String,System.String,System.Byte[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.UploadContactListFileAsync(System.String,System.String,System.String,System.Byte[],System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ActivationCampaignByFtpFile(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ActivationCampaignByFtpFileAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ActivationCampaignByFtpFileAsync(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.NameExists(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.NameExistsAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.NameExistsAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.EmailExists(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.EmailExistsAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.EmailExistsAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignID(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignIDAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignIDAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccessToken(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccessTokenAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccessTokenAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.VerifyAccessToken(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.VerifyAccessTokenAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.VerifyAccessTokenAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAPIKey(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAPIKeyAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAPIKeyAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountInfo(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountInfoAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetAccountInfoAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SetCampaignDailyLimit(System.String,System.String,System.Int32,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SetCampaignDailyLimitAsync(System.String,System.String,System.Int32,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SetCampaignDailyLimitAsync(System.String,System.String,System.Int32,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SetCampaignTimeLimit(System.String,System.String,System.Int32,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SetCampaignTimeLimitAsync(System.String,System.String,System.Int32,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SetCampaignTimeLimitAsync(System.String,System.String,System.Int32,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SplitContactListByRange(System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SplitContactListByRangeAsync(System.String,System.String,System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.SplitContactListByRangeAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getActiveSubscribersByContactList(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getActiveSubscribersByContactListAsync(System.String,System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getActiveSubscribersByContactListAsync(System.String,System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraftSerialize(System.String,System.String,System.String,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraftSerializeAsync(System.String,System.String,System.String,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignDraftSerializeAsync(System.String,System.String,System.String,System.String[],System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignSerialize(System.String,System.String,System.String,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignSerializeAsync(System.String,System.String,System.String,System.String[],System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaignSerializeAsync(System.String,System.String,System.String,System.String[],System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign2Serialize(System.String,System.String,System.String,System.String,System.String[],System.Int32,System.DateTime,System.String,Analysis.SpreadWebReference.CampaignStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign2SerializeAsync(System.String,System.String,System.String,System.String,System.String[],System.Int32,System.DateTime,System.String,Analysis.SpreadWebReference.CampaignStatus)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.createCampaign2SerializeAsync(System.String,System.String,System.String,System.String,System.String[],System.Int32,System.DateTime,System.String,Analysis.SpreadWebReference.CampaignStatus,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReportSerialize(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReportSerializeAsync(System.String,System.String,System.Int32)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.getCampaignReportSerializeAsync(System.String,System.String,System.Int32,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByInfoSerialize(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByInfoSerializeAsync(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscriberByInfoSerializeAsync(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfoSerialize(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfoSerializeAsync(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.addSubscribersByInfoSerializeAsync(System.String,System.String,System.String,System.String,Analysis.SpreadWebReference.DoubleOptIn,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContacts(System.String,System.String,System.String[],System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsAsync(System.String,System.String,System.String[],System.String[])">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsAsync(System.String,System.String,System.String[],System.String[],System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsByDomain(System.String,System.String,System.String[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsByDomainAsync(System.String,System.String,System.String[],System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsByDomainAsync(System.String,System.String,System.String[],System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsByNetEase(System.String,System.String,System.String[],System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsByNetEaseAsync(System.String,System.String,System.String[],System.Boolean)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.ExcludeContactsByNetEaseAsync(System.String,System.String,System.String[],System.Boolean,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetNetEaseRank(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetNetEaseRankAsync(System.String,System.String)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.GetNetEaseRankAsync(System.String,System.String,System.Object)">
<remarks/>
</member>
<member name="M:Analysis.SpreadWebReference.Service.CancelAsync(System.Object)">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.AccountType">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.AccountType.Email">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.AccountType.SMS">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.AccountType.WhatsApp">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.Campaign">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.campaignName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.fromEmail">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.from">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.subject">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.content">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.signature">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Campaign.schedule">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.server">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.server.ServerID">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.server.Host">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.server.Port">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.server.Password">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.server.Username">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.server.Queuelength">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CampaignAttachment">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignAttachment.displayName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignAttachment.file">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignAttachment.fileType">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.errorDetail">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.errorDetail.errorCode">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.errorDetail.errorDesc">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ResponseResult">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ResponseResult.trackingId">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ResponseResult.customerReferenceNo">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ResponseResult.status">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ResponseResult.errorDetails">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.Subscriber">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.email">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.firstName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.middleName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.lastName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.jobTitle">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.company">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.homePhone">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.address1">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.address2">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.address3">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.city">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.state">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.country">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.postalCode">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.subPostalCode">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.fax">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.webUrl">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.title">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.gender">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.date1">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.date2">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField1">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField2">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField3">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField4">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField5">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField6">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField7">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField8">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField9">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField10">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField11">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField12">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField13">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField14">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Subscriber.customField15">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CampaignReport">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.CampaignId">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.CampaignName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.SentCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.FailCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.OpenCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.AllClickCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.UniqueClicksCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.ConversionCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.BounceCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.SpamCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.UnsubscribeCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.UndeliverableCount">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.Status">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.DateSent">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.CreateDate">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignReport.Schedule">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CampaignStatus">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Inexistent">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Deleted">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Sent">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Draft">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Pause">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Sending">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.CampaignStatus.Waiting">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CampaignCreatives">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.subject">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.displayName">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.fromAddress">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.replyTo">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.creativeContent">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.target">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CampaignCreatives.isCampaignDefault">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SubscriptionStatus">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriptionStatus.Any">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriptionStatus.Deleted">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriptionStatus.Active">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriptionStatus.Invisible">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SubscriberStatus">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Any">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Deleted">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Active">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Unsubscribed">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Unconfirmed">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Undeliverable">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.SpamReporter">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.DoNotMail">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.SubscriberStatus.Blacklist">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.DoubleOptIn">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.DoubleOptIn.ReferToUserOption">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.DoubleOptIn.On">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.DoubleOptIn.Off">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.EventType">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.EventType.Open">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.EventType.Click">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.EventType.Bounce">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.EventType.SPAM">
<remarks/>
</member>
<member name="F:Analysis.SpreadWebReference.EventType.Invalid">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getUserSentReportCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getUserSentReportCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getUserSentReportCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetUserCreditCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetUserCreditCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetUserCreditCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSubscriberDetailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSubscriberDetailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetSubscriberDetailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignSubscriberDetailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignSubscriberDetailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignSubscriberDetailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetUploadRequestStatusCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetUploadRequestStatusCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetUploadRequestStatusCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UnsubscribeEmailInAccountCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UnsubscribeEmailInAccountCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.UnsubscribeEmailInAccountCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UnsubscribeEmailInContactListCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UnsubscribeEmailInContactListCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.UnsubscribeEmailInContactListCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignDraftCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignDraftCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaignDraftCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignDraft2CompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignDraft2CompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaignDraft2CompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaignCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CreateCampaignBySimpleTypeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CreateCampaignBySimpleTypeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CreateCampaignBySimpleTypeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaign2CompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaign2CompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaign2CompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UpdateCampaignStatusCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UpdateCampaignStatusCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.UpdateCampaignStatusCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendSMSCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendSMSCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendSMSCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSmsRepliesCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSmsRepliesCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetSmsRepliesCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignStatusCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignStatusCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getCampaignStatusCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignReportCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignReportCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getCampaignReportCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignReport2CompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignReport2CompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getCampaignReport2CompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ChangePublishStatusCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getAllSubscriptionCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getAllSubscriptionCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getAllSubscriptionCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getSubscriptionCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getSubscriptionCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getSubscriptionCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getSubscriptions2StringCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getSubscriptions2StringCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getSubscriptions2StringCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSubscribersCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSubscribersCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetSubscribersCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createSubscriptionCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createSubscriptionCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createSubscriptionCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createContactListCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createContactListCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createContactListCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscriberByEmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscriberByEmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.addSubscriberByEmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.DeleteSubscribersFromListCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.DeleteSubscribersFromListCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.DeleteSubscribersFromListCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.DeleteSubscribersFromAccountCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.DeleteSubscribersFromAccountCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.DeleteSubscribersFromAccountCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscriberByInfoCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscriberByInfoCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.addSubscriberByInfoCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscribersByInfoCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscribersByInfoCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.addSubscribersByInfoCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscribersByInfo2CompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscribersByInfo2CompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.addSubscribersByInfo2CompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.Send2CompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.Send2CompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Send2CompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.Send3CompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.Send3CompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.Send3CompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendmultipleAttachmentCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendmultipleAttachmentCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendmultipleAttachmentCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendMTREmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendMTREmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendMTREmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendWithAttachmentCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendWithAttachmentCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendWithAttachmentCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendSimpleAttachmentCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendSimpleAttachmentCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendSimpleAttachmentCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.EmailSendCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.EmailSendCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.EmailSendCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UpdateMemberEmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UpdateMemberEmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.UpdateMemberEmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendTemplateEmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendTemplateEmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendTemplateEmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendAndCcCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendAndCcCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendAndCcCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetEmailStatusCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetEmailStatusCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetEmailStatusCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSMSStatusCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetSMSStatusCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetSMSStatusCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.HelloWorldCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.HelloWorldCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.HelloWorldCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignsSend2TalkkingUserCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignsSend2TalkkingUserCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignsSend2TalkkingUserCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendBatchCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SendBatchCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SendBatchCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SearchContactsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SearchContactsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SearchContactsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SplitContactsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SplitContactsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SplitContactsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactListCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactListCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ExcludeContactListCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignDetailReportCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignDetailReportCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignDetailReportCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignSentsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignSentsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignSentsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignOpensCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignOpensCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignOpensCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignOpensJsonCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignOpensJsonCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignOpensJsonCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignOpensWithNameCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignOpensWithNameCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignOpensWithNameCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignClicksCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignClicksCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignClicksCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignClicksWithNameCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignClicksWithNameCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignClicksWithNameCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignUnsubscribesCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignUnsubscribesCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignUnsubscribesCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccountUnsubscribesCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccountUnsubscribesCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetAccountUnsubscribesCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccountUnsubscribesToFtpCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccountUnsubscribesToFtpCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetAccountUnsubscribesToFtpCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignAbusesCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignAbusesCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignAbusesCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignConversionsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignConversionsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignConversionsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignConvertionsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignConvertionsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignConvertionsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignBouncesCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetCampaignBouncesCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetCampaignBouncesCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.AddSenderEmailCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.AddSenderEmailCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.AddSenderEmailCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.AddOrUpdateWebhookCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.AddOrUpdateWebhookCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.AddOrUpdateWebhookCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CreateNewAccountCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.CreateNewAccountCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.CreateNewAccountCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.TransferCreditCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.TransferCreditCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.TransferCreditCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UplodeZipFileCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UplodeZipFileCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.UplodeZipFileCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UploadContactListFileCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.UploadContactListFileCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.UploadContactListFileCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ActivationCampaignByFtpFileCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ActivationCampaignByFtpFileCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ActivationCampaignByFtpFileCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.NameExistsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.NameExistsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.NameExistsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.EmailExistsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.EmailExistsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.EmailExistsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignIDCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignIDCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getCampaignIDCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccessTokenCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccessTokenCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetAccessTokenCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.VerifyAccessTokenCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.VerifyAccessTokenCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.VerifyAccessTokenCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAPIKeyCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAPIKeyCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetAPIKeyCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccountInfoCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetAccountInfoCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetAccountInfoCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SetCampaignDailyLimitCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SetCampaignDailyLimitCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SetCampaignDailyLimitCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SetCampaignTimeLimitCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SetCampaignTimeLimitCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SetCampaignTimeLimitCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SplitContactListByRangeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.SplitContactListByRangeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.SplitContactListByRangeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getActiveSubscribersByContactListCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getActiveSubscribersByContactListCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getActiveSubscribersByContactListCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignDraftSerializeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignDraftSerializeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaignDraftSerializeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignSerializeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaignSerializeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaignSerializeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaign2SerializeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.createCampaign2SerializeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.createCampaign2SerializeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignReportSerializeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.getCampaignReportSerializeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.getCampaignReportSerializeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscriberByInfoSerializeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscriberByInfoSerializeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.addSubscriberByInfoSerializeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscribersByInfoSerializeCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.addSubscribersByInfoSerializeCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.addSubscribersByInfoSerializeCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactsCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactsCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ExcludeContactsCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactsByDomainCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactsByDomainCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ExcludeContactsByDomainCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactsByNetEaseCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.ExcludeContactsByNetEaseCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.ExcludeContactsByNetEaseCompletedEventArgs.Result">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetNetEaseRankCompletedEventHandler">
<remarks/>
</member>
<member name="T:Analysis.SpreadWebReference.GetNetEaseRankCompletedEventArgs">
<remarks/>
</member>
<member name="P:Analysis.SpreadWebReference.GetNetEaseRankCompletedEventArgs.Result">
<remarks/>
</member>
<member name="M:Analysis.wholesale.SetSubject(System.Int32,System.Int32,System.String,System.String,System.String)">
 <summary>
 从数据库产品中获得并设置Subject信息如个性化，刊号，日期等
 </summary>
 <param name="issueId"></param>
 <remarks>可以新增自定义标签，并在此处实现</remarks>
</member>
<member name="M:Analysis.wholesale.GetProductDict(System.Int32,System.String,System.String[],System.String,System.Int32)">
 <summary>
 根据categories获取产品列表，返回字典格式(category,list of product)
 </summary>
 <param name="siteid"></param>
 <param name="planType"></param>
 <param name="domain"></param>
 <param name="issueId"></param>
 <returns></returns>
</member>
<member name="M:Analysis.Activity1.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
</members>
</doc>
